<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>MyCat</title>
    <url>/2022/05/16/mycat/</url>
    <content><![CDATA[<h2 id="MyCat-实现高可用读写分离分库分表"><a href="#MyCat-实现高可用读写分离分库分表" class="headerlink" title="MyCat 实现高可用读写分离分库分表"></a>MyCat 实现高可用读写分离分库分表</h2><blockquote>
<p>拦截（SQL 拦截分析&amp;查询结果拦截返回）</p>
</blockquote>
<ul>
<li>mycat：主从复制，读写分离</li>
<li>mycat-web：mycat 可视化界面</li>
<li>HAProxy：mycat 集群</li>
<li>HAProxy + Keepalived：mycat 高可用集群架构</li>
</ul>
<p><code>注</code></p>
<ul>
<li>keepalived：作用是抢占vip（虚拟IP）以提供对外服务</li>
<li>Mycat 的高可用及负载均衡由 HAProxy 来实现，而 HAProxy 的高可用由 keepalived 实现</li>
</ul>
<h2 id="MyCat-配置文件"><a href="#MyCat-配置文件" class="headerlink" title="MyCat 配置文件"></a>MyCat 配置文件</h2><ul>
<li>schema.xml：MyCat 的逻辑库、逻辑表以及对应的分片规则、DataNode以及 DataSourcec</li>
<li>server.xml：MyCat 系统配置信息。如用户名、密码及权限</li>
<li>rule.xml：拆分表的规则</li>
</ul>
<p><code>MyCat 管理端口：9066，服务端口：8066</code></p>
<span id="more"></span>

<h3 id="schema-xml-配置"><a href="#schema-xml-配置" class="headerlink" title="schema.xml 配置"></a>schema.xml 配置</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mycat</span>:schema <span class="keyword">SYSTEM</span> <span class="string">&quot;schema.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mycat:schema</span> <span class="attr">xmlns:mycat</span>=<span class="string">&quot;http://io.mycat/&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 1.schema：定义MyCat实例中的逻辑库 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">schema</span> <span class="attr">name</span>=<span class="string">&quot;TESTDB&quot;</span> <span class="attr">checkSQLschema</span>=<span class="string">&quot;true&quot;</span> <span class="attr">sqlMaxLimit</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 2.auto-sharding-long的分片规则是按ID值的范围进行分片--&gt;</span> </span><br><span class="line">        <span class="comment">&lt;!-- 1-5000000 为第1片 5000001-10000000 为第2片...--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">table</span> <span class="attr">name</span>=<span class="string">&quot;travelrecord&quot;</span> <span class="attr">dataNode</span>=<span class="string">&quot;dn1,dn2,dn3&quot;</span> <span class="attr">rule</span>=<span class="string">&quot;auto-sharding-long&quot;</span> /&gt;</span>	</span><br><span class="line">	<span class="tag">&lt;/<span class="name">schema</span>&gt;</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">&lt;!-- 3.定义了MyCat中的数据节点,即数据分片 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dataNode</span> <span class="attr">name</span>=<span class="string">&quot;dn1&quot;</span> <span class="attr">dataHost</span>=<span class="string">&quot;localhost1&quot;</span> <span class="attr">database</span>=<span class="string">&quot;db1&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dataNode</span> <span class="attr">name</span>=<span class="string">&quot;dn2&quot;</span> <span class="attr">dataHost</span>=<span class="string">&quot;localhost1&quot;</span> <span class="attr">database</span>=<span class="string">&quot;db2&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dataNode</span> <span class="attr">name</span>=<span class="string">&quot;dn3&quot;</span> <span class="attr">dataHost</span>=<span class="string">&quot;localhost1&quot;</span> <span class="attr">database</span>=<span class="string">&quot;db3&quot;</span> /&gt;</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">&lt;!-- 4.定义数据库实例，读写分离配置和心跳语句 --&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- balance 0不开启读写分离；1读写分离...--&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dataHost</span> <span class="attr">name</span>=<span class="string">&quot;localhost1&quot;</span> <span class="attr">maxCon</span>=<span class="string">&quot;1000&quot;</span> <span class="attr">minCon</span>=<span class="string">&quot;10&quot;</span> <span class="attr">balance</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">			  <span class="attr">writeType</span>=<span class="string">&quot;0&quot;</span> <span class="attr">dbType</span>=<span class="string">&quot;mysql&quot;</span> <span class="attr">dbDriver</span>=<span class="string">&quot;native&quot;</span> <span class="attr">switchType</span>=<span class="string">&quot;1&quot;</span>  <span class="attr">slaveThreshold</span>=<span class="string">&quot;100&quot;</span>&gt;</span>		  </span><br><span class="line">		<span class="tag">&lt;<span class="name">heartbeat</span>&gt;</span>select user()<span class="tag">&lt;/<span class="name">heartbeat</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">writeHost</span> <span class="attr">host</span>=<span class="string">&quot;hostM1&quot;</span> <span class="attr">url</span>=<span class="string">&quot;localhost:3306&quot;</span> <span class="attr">user</span>=<span class="string">&quot;root&quot;</span> <span class="attr">assword</span>=<span class="string">&quot;123456&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">writeHost</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dataHost</span>&gt;</span></span><br><span class="line">	</span><br><span class="line"><span class="tag">&lt;/<span class="name">mycat:schema</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="server-xml"><a href="#server-xml" class="headerlink" title="server.xml"></a>server.xml</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mycat</span>:server <span class="keyword">SYSTEM</span> <span class="string">&quot;server.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mycat:server</span> <span class="attr">xmlns:mycat</span>=<span class="string">&quot;http://io.mycat/&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!--1.系统参数设置--&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">system</span>&gt;</span></span><br><span class="line">		...</span><br><span class="line">		<span class="comment">&lt;!-- 20210417 设置字符集 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;charset&quot;</span>&gt;</span>utf8<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">system</span>&gt;</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">&lt;!--2.用户信息设置--&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">user</span> <span class="attr">name</span>=<span class="string">&quot;root&quot;</span> <span class="attr">defaultAccount</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span>123456<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;schemas&quot;</span>&gt;</span>ITCAST<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mycat:server</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="rule-xml"><a href="#rule-xml" class="headerlink" title="rule.xml"></a>rule.xml</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mycat</span>:rule <span class="keyword">SYSTEM</span> <span class="string">&quot;rule.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mycat:rule</span> <span class="attr">xmlns:mycat</span>=<span class="string">&quot;http://io.mycat/&quot;</span>&gt;</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">&lt;!-- 1.tableRule配置规则 --&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- 分片的字段为&quot;id&quot;,分片规则是&quot;rang-long&quot; --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">tableRule</span> <span class="attr">name</span>=<span class="string">&quot;auto-sharding-long&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">rule</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">columns</span>&gt;</span>id<span class="tag">&lt;/<span class="name">columns</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">algorithm</span>&gt;</span>rang-long<span class="tag">&lt;/<span class="name">algorithm</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">rule</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">tableRule</span>&gt;</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">&lt;!-- 2.&quot;rang-long&quot;的规则具体映射文件是&quot;autopartition-long.txt&quot; --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">function</span> <span class="attr">name</span>=<span class="string">&quot;rang-long&quot;</span></span></span><br><span class="line"><span class="tag">		<span class="attr">class</span>=<span class="string">&quot;io.mycat.route.function.AutoPartitionByLong&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;mapFile&quot;</span>&gt;</span>autopartition-long.txt<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">function</span>&gt;</span></span><br><span class="line">	</span><br><span class="line"><span class="tag">&lt;/<span class="name">mycat:rule</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="win-系统下使用-MyCat"><a href="#win-系统下使用-MyCat" class="headerlink" title="win 系统下使用 MyCat"></a>win 系统下使用 MyCat</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash"><span class="comment"># cmd使用管理员打开并安装</span></span></span><br><span class="line">mycat.bat install</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash"><span class="comment"># 启动mycat服务</span></span></span><br><span class="line">mycat.bat start</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash"><span class="comment"># 查看mycat的运行状态：</span></span></span><br><span class="line">mycat.bat status</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash"><span class="comment"># 停止mycat服务</span></span></span><br><span class="line">mycat.bat stop</span><br></pre></td></tr></table></figure>

<h3 id="性能监控（MyCat-Web）"><a href="#性能监控（MyCat-Web）" class="headerlink" title="性能监控（MyCat-Web）"></a>性能监控（MyCat-Web）</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MyCat-Web 引入 zk 作为配置中心，可以管理多个节点</span><br><span class="line"></span><br><span class="line">1. 安装 zk</span><br><span class="line">2. 启动 MyCat-Web</span><br><span class="line">3. http://localhost:8082/mycat</span><br><span class="line">4. 配置 MyCat 参数</span><br></pre></td></tr></table></figure>

<h3 id="MyCat-和-MyCat-Web-的关系图"><a href="#MyCat-和-MyCat-Web-的关系图" class="headerlink" title="MyCat 和 MyCat-Web 的关系图"></a>MyCat 和 MyCat-Web 的关系图</h3><p><code>流程：</code></p>
<ol>
<li>Java Web 项目触发数据查询（select * from user where status&#x3D;’0’）</li>
<li>MyCat Server（解析 SQL -&gt; 分片分析 -&gt; 路由分析 -&gt; 读写分离分析 -&gt; …）</li>
<li>定位到x库*表</li>
<li>MyCat Server（结果合并 -&gt; 聚合处理 -&gt; 排序处理 -&gt; 分页处理 -&gt; …）</li>
</ol>
<h2 id="MyCat-高可用架构"><a href="#MyCat-高可用架构" class="headerlink" title="MyCat 高可用架构"></a>MyCat 高可用架构</h2><h3 id="MyCat-主从读写分离"><a href="#MyCat-主从读写分离" class="headerlink" title="MyCat 主从读写分离"></a>MyCat 主从读写分离</h3><p>一主一从</p>
<h4 id="MyCat-集群部署"><a href="#MyCat-集群部署" class="headerlink" title="MyCat 集群部署"></a>MyCat 集群部署</h4><p>HAProxy 实现 MyCat 高可用</p>
<h4 id="MyCat-高可用集群部署"><a href="#MyCat-高可用集群部署" class="headerlink" title="MyCat 高可用集群部署"></a>MyCat 高可用集群部署</h4><p>keepalived 实现 HAProxy 高可用</p>
<h3 id="双主双从读写分离"><a href="#双主双从读写分离" class="headerlink" title="双主双从读写分离"></a>双主双从读写分离</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">双主双从：</span><br><span class="line">    架构    ：m1 -&gt; s1   ;  m2 -&gt; s2    ;  m1 &lt;-&gt; m2 互为主备</span><br><span class="line">    读写分离 ：m1写       ;  m2,s1,s2读</span><br><span class="line">    挂机    ：m1挂掉后m2进行写</span><br><span class="line">    </span><br><span class="line">mycat主从切换问题：</span><br><span class="line">    方式1：自动切换：</span><br><span class="line">    当M宕机后， 读写S ； 恢复M后， 写S， 读M ；</span><br><span class="line">    当S宕机后， 读写M ； 恢复S后， 写M， 读S ；</span><br><span class="line">    方式2：基于MySQL主从同步状态的切换</span><br><span class="line">    MyCat检测到主从数据同步延迟，会自动切换到拥有最新数据的MySQL服务器</span><br></pre></td></tr></table></figure>

<h3 id="MyCat-分库分表架构图"><a href="#MyCat-分库分表架构图" class="headerlink" title="MyCat 分库分表架构图"></a>MyCat 分库分表架构图</h3><h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">url: jdbc:mysql://127.0.0.1:8066/V_SHOP?useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=UTC</span><br></pre></td></tr></table></figure>

<h3 id="schema-xml"><a href="#schema-xml" class="headerlink" title="schema.xml"></a>schema.xml</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mycat</span>:schema <span class="keyword">SYSTEM</span> <span class="string">&quot;schema.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mycat:schema</span> <span class="attr">xmlns:mycat</span>=<span class="string">&quot;http://io.mycat/&quot;</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!--1.逻辑表和逻辑库设置--&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">schema</span> <span class="attr">name</span>=<span class="string">&quot;V_SHOP&quot;</span> <span class="attr">checkSQLschema</span>=<span class="string">&quot;false&quot;</span> <span class="attr">sqlMaxLimit</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--全局表--&gt;</span></span><br><span class="line">	   <span class="tag">&lt;<span class="name">table</span> <span class="attr">name</span>=<span class="string">&quot;tb_areas&quot;</span> <span class="attr">dataNode</span>=<span class="string">&quot;dn1,dn2,dn3,dn4&quot;</span> <span class="attr">primaryKey</span>=<span class="string">&quot;areaid&quot;</span> <span class="attr">type</span>=<span class="string">&quot;global&quot;</span>/&gt;</span></span><br><span class="line">	   <span class="tag">&lt;<span class="name">table</span> <span class="attr">name</span>=<span class="string">&quot;tb_provinces&quot;</span> <span class="attr">dataNode</span>=<span class="string">&quot;dn1,dn2,dn3,dn4&quot;</span> <span class="attr">primaryKey</span>=<span class="string">&quot;provinceid&quot;</span> <span class="attr">type</span>=<span class="string">&quot;global&quot;</span>/&gt;</span></span><br><span class="line">	   <span class="tag">&lt;<span class="name">table</span> <span class="attr">name</span>=<span class="string">&quot;tb_cities&quot;</span> <span class="attr">dataNode</span>=<span class="string">&quot;dn1,dn2,dn3,dn4&quot;</span> <span class="attr">primaryKey</span>=<span class="string">&quot;cityid&quot;</span>  <span class="attr">type</span>=<span class="string">&quot;global&quot;</span>/&gt;</span></span><br><span class="line">	   <span class="tag">&lt;<span class="name">table</span> <span class="attr">name</span>=<span class="string">&quot;tb_dictionary&quot;</span> <span class="attr">dataNode</span>=<span class="string">&quot;dn1,dn2,dn3,dn4&quot;</span> <span class="attr">primaryKey</span>=<span class="string">&quot;id&quot;</span>  <span class="attr">type</span>=<span class="string">&quot;global&quot;</span>/&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--v_goods商品模块--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">table</span> <span class="attr">name</span>=<span class="string">&quot;tb_brand&quot;</span> <span class="attr">dataNode</span>=<span class="string">&quot;dn1&quot;</span> <span class="attr">primaryKey</span>=<span class="string">&quot;id&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">table</span> <span class="attr">name</span>=<span class="string">&quot;tb_category&quot;</span> <span class="attr">dataNode</span>=<span class="string">&quot;dn1&quot;</span> <span class="attr">primaryKey</span>=<span class="string">&quot;id&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">table</span> <span class="attr">name</span>=<span class="string">&quot;tb_sku&quot;</span> <span class="attr">dataNode</span>=<span class="string">&quot;dn1&quot;</span> <span class="attr">primaryKey</span>=<span class="string">&quot;id&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">table</span> <span class="attr">name</span>=<span class="string">&quot;tb_spu&quot;</span> <span class="attr">dataNode</span>=<span class="string">&quot;dn1&quot;</span> <span class="attr">primaryKey</span>=<span class="string">&quot;id&quot;</span> /&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--v_order订单模块--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">table</span> <span class="attr">name</span>=<span class="string">&quot;tb_order&quot;</span> <span class="attr">dataNode</span>=<span class="string">&quot;dn2&quot;</span> <span class="attr">primaryKey</span>=<span class="string">&quot;id&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">table</span> <span class="attr">name</span>=<span class="string">&quot;tb_order_item&quot;</span> <span class="attr">dataNode</span>=<span class="string">&quot;dn2&quot;</span> <span class="attr">primaryKey</span>=<span class="string">&quot;id&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">table</span> <span class="attr">name</span>=<span class="string">&quot;tb_order_log&quot;</span> <span class="attr">dataNode</span>=<span class="string">&quot;dn2&quot;</span> <span class="attr">primaryKey</span>=<span class="string">&quot;id&quot;</span> /&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--v_log日志模块--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--分表规则采用hash一致&quot;log-sharding-by-murmur&quot;规则--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">table</span> <span class="attr">name</span>=<span class="string">&quot;tb_operatelog&quot;</span> <span class="attr">dataNode</span>=<span class="string">&quot;dn3,dn4&quot;</span> <span class="attr">primaryKey</span>=<span class="string">&quot;id&quot;</span> <span class="attr">rule</span>=<span class="string">&quot;log-sharding-by-murmur&quot;</span>/&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">schema</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">	<span class="comment">&lt;!--2.实际数据节点映射关系--&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dataNode</span> <span class="attr">name</span>=<span class="string">&quot;dn1&quot;</span> <span class="attr">dataHost</span>=<span class="string">&quot;host1&quot;</span> <span class="attr">database</span>=<span class="string">&quot;v_goods&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dataNode</span> <span class="attr">name</span>=<span class="string">&quot;dn2&quot;</span> <span class="attr">dataHost</span>=<span class="string">&quot;host2&quot;</span> <span class="attr">database</span>=<span class="string">&quot;v_order&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dataNode</span> <span class="attr">name</span>=<span class="string">&quot;dn3&quot;</span> <span class="attr">dataHost</span>=<span class="string">&quot;host3&quot;</span> <span class="attr">database</span>=<span class="string">&quot;v_log&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dataNode</span> <span class="attr">name</span>=<span class="string">&quot;dn4&quot;</span> <span class="attr">dataHost</span>=<span class="string">&quot;host4&quot;</span> <span class="attr">database</span>=<span class="string">&quot;v_log&quot;</span> /&gt;</span></span><br><span class="line">    </span><br><span class="line">	<span class="comment">&lt;!--3.实际数据节点设置--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--下面只是有的节点进行分表，并没有进行读写分离--&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dataHost</span> <span class="attr">name</span>=<span class="string">&quot;host1&quot;</span> <span class="attr">maxCon</span>=<span class="string">&quot;1000&quot;</span> <span class="attr">minCon</span>=<span class="string">&quot;10&quot;</span> <span class="attr">balance</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">		<span class="attr">writeType</span>=<span class="string">&quot;0&quot;</span> <span class="attr">dbType</span>=<span class="string">&quot;mysql&quot;</span> <span class="attr">dbDriver</span>=<span class="string">&quot;native&quot;</span> <span class="attr">switchType</span>=<span class="string">&quot;1&quot;</span>  <span class="attr">slaveThreshold</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">heartbeat</span>&gt;</span>select user()<span class="tag">&lt;/<span class="name">heartbeat</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--上面说的ip1就是指&quot;192.168.192.158&quot;,下面同理不再赘述--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">writeHost</span> <span class="attr">host</span>=<span class="string">&quot;hostM1&quot;</span> <span class="attr">url</span>=<span class="string">&quot;192.168.192.158:3306&quot;</span> <span class="attr">user</span>=<span class="string">&quot;root&quot;</span> <span class="attr">password</span>=<span class="string">&quot;itcast&quot;</span>&gt;</span>	<span class="tag">&lt;/<span class="name">writeHost</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dataHost</span>&gt;</span>	</span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">dataHost</span> <span class="attr">name</span>=<span class="string">&quot;host2&quot;</span> <span class="attr">maxCon</span>=<span class="string">&quot;1000&quot;</span> <span class="attr">minCon</span>=<span class="string">&quot;10&quot;</span> <span class="attr">balance</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">		<span class="attr">writeType</span>=<span class="string">&quot;0&quot;</span> <span class="attr">dbType</span>=<span class="string">&quot;mysql&quot;</span> <span class="attr">dbDriver</span>=<span class="string">&quot;native&quot;</span> <span class="attr">switchType</span>=<span class="string">&quot;1&quot;</span>  <span class="attr">slaveThreshold</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">heartbeat</span>&gt;</span>select user()<span class="tag">&lt;/<span class="name">heartbeat</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">writeHost</span> <span class="attr">host</span>=<span class="string">&quot;hostM2&quot;</span> <span class="attr">url</span>=<span class="string">&quot;192.168.192.159:3306&quot;</span> <span class="attr">user</span>=<span class="string">&quot;root&quot;</span> <span class="attr">password</span>=<span class="string">&quot;itcast&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">writeHost</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dataHost</span>&gt;</span>	</span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">dataHost</span> <span class="attr">name</span>=<span class="string">&quot;host3&quot;</span> <span class="attr">maxCon</span>=<span class="string">&quot;1000&quot;</span> <span class="attr">minCon</span>=<span class="string">&quot;10&quot;</span> <span class="attr">balance</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">		<span class="attr">writeType</span>=<span class="string">&quot;0&quot;</span> <span class="attr">dbType</span>=<span class="string">&quot;mysql&quot;</span> <span class="attr">dbDriver</span>=<span class="string">&quot;native&quot;</span> <span class="attr">switchType</span>=<span class="string">&quot;1&quot;</span>  <span class="attr">slaveThreshold</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">heartbeat</span>&gt;</span>select user()<span class="tag">&lt;/<span class="name">heartbeat</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">writeHost</span> <span class="attr">host</span>=<span class="string">&quot;hostM3&quot;</span> <span class="attr">url</span>=<span class="string">&quot;192.168.192.160:3306&quot;</span> <span class="attr">user</span>=<span class="string">&quot;root&quot;</span> <span class="attr">password</span>=<span class="string">&quot;itcast&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">writeHost</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dataHost</span>&gt;</span>	</span><br><span class="line">	</span><br><span class="line">	<span class="tag">&lt;<span class="name">dataHost</span> <span class="attr">name</span>=<span class="string">&quot;host4&quot;</span> <span class="attr">maxCon</span>=<span class="string">&quot;1000&quot;</span> <span class="attr">minCon</span>=<span class="string">&quot;10&quot;</span> <span class="attr">balance</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">		<span class="attr">writeType</span>=<span class="string">&quot;0&quot;</span> <span class="attr">dbType</span>=<span class="string">&quot;mysql&quot;</span> <span class="attr">dbDriver</span>=<span class="string">&quot;native&quot;</span> <span class="attr">switchType</span>=<span class="string">&quot;1&quot;</span>  <span class="attr">slaveThreshold</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">heartbeat</span>&gt;</span>select user()<span class="tag">&lt;/<span class="name">heartbeat</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">writeHost</span> <span class="attr">host</span>=<span class="string">&quot;hostM4&quot;</span> <span class="attr">url</span>=<span class="string">&quot;192.168.192.161:3306&quot;</span> <span class="attr">user</span>=<span class="string">&quot;root&quot;</span> <span class="attr">password</span>=<span class="string">&quot;itcast&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">writeHost</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dataHost</span>&gt;</span>	</span><br><span class="line"><span class="tag">&lt;/<span class="name">mycat:schema</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="server-xml-1"><a href="#server-xml-1" class="headerlink" title="server.xml"></a>server.xml</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">user</span> <span class="attr">name</span>=<span class="string">&quot;root&quot;</span> <span class="attr">defaultAccount</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;schemas&quot;</span>&gt;</span>V_SHOP<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span>123456<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="rule-xml-1"><a href="#rule-xml-1" class="headerlink" title="rule.xml"></a>rule.xml</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--一致性hash算法 2个库--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tableRule</span> <span class="attr">name</span>=<span class="string">&quot;log-sharding-by-murmur&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">rule</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">columns</span>&gt;</span>id<span class="tag">&lt;/<span class="name">columns</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">algorithm</span>&gt;</span>log-murmur<span class="tag">&lt;/<span class="name">algorithm</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">rule</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tableRule</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">function</span> <span class="attr">name</span>=<span class="string">&quot;log-murmur&quot;</span> <span class="attr">class</span>=<span class="string">&quot;io.mycat.route.function.PartitionByMurmurHash&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;seed&quot;</span>&gt;</span>0<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;count&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;virtualBucketTimes&quot;</span>&gt;</span>160<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">function</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>mysql</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>mycat</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL</title>
    <url>/2022/05/04/mysql/</url>
    <content><![CDATA[<h1 id="《MySQL技术精粹：架构、高级特性、型能优化与集群实战》"><a href="#《MySQL技术精粹：架构、高级特性、型能优化与集群实战》" class="headerlink" title="《MySQL技术精粹：架构、高级特性、型能优化与集群实战》"></a>《MySQL技术精粹：架构、高级特性、型能优化与集群实战》</h1><h2 id="第一章-MySQL-架构介绍"><a href="#第一章-MySQL-架构介绍" class="headerlink" title="第一章 MySQL 架构介绍"></a>第一章 MySQL 架构介绍</h2><h3 id="1-1-MySQL-架构"><a href="#1-1-MySQL-架构" class="headerlink" title="1.1 MySQL 架构"></a>1.1 MySQL 架构</h3><p>MySQL 服务器 &#x3D; SQL 层 + 存储引擎层</p>
<p>SQL 层：</p>
<ul>
<li>权限判断</li>
<li>SQL 解析</li>
<li>SQL 查询</li>
</ul>
<p>存储引擎层：完成底层数据库数据存储操作</p>
<p>MySQL 各模块特点：</p>
<ol>
<li>【连接&#x2F;线程处理】客户端连接 MySQL 数据库，主要用来处理客户端的请求、身份验证和数据库安全性验证</li>
<li>【查询缓存和查询分析器】是 SQL 层的核心部分，主要涉及查询的解析、优化、缓存，以及所有内置的函数，存储过程，触发器，视图等功能</li>
<li>【优化器】负责存储和获取所有存储在 MySQL 中的数据</li>
</ol>
<span id="more"></span>

<h4 id="1-1-1-MySQL-物理文件的组成"><a href="#1-1-1-MySQL-物理文件的组成" class="headerlink" title="1.1.1 MySQL 物理文件的组成"></a>1.1.1 MySQL 物理文件的组成</h4><blockquote>
<p>日志文件、数据文件和其他文件</p>
</blockquote>
<ol>
<li><p>日志文件：记录了数据库操作信息和错误信息。常用的日志文件包括错误日志、二进制日志、查询日志、慢查询日志和 InnoDB 引擎在线 Redo 日志</p>
<ol>
<li>错误日志（Error Log）：记录了 MySQL Server 运行过程中遇到的所有严重的错误信息，以及 MySQL 每次启动和关闭的详细信息。默认关闭</li>
<li>二进制日志（Binary Log）：即常说的 binlog。记录了 MySQL 所有修改数据库的操作，以二进制的形式记录在日志文件中，其中还包括每条语句所执行的时间和所消耗的资源以及相关的事务信息</li>
<li>查询日志（Query Log）：记录所有的查询操作</li>
<li>慢查询日志（Slow Query Log）：只所有 SQL 执行的时间超过 long_query_time 变量的语句和达到 min_examined_row_limit 条距离的语句。查看慢查询日志可以采用 mysqldumpslow 命令对慢查询日志进行分析</li>
<li>InnoDB 引擎在线 Redo 日志：记录 InnoDB 所做的所有物理变更和事务信息。通过 Redo 日志和 Undo 信息，InnoDB 大大地加强了事务的安全性。默认存放在 data 目录下</li>
</ol>
</li>
<li><p>数据文件：不同的数据库引擎，每个表的扩展名不一样，如 MyISAM 引擎用“.MYD” 作为扩展名，InnoDB 引擎使用“.idb” 作为扩展名等</p>
<ol>
<li>.frm 文件：存放与表相关的数据信息，包括表结构定义信息。当数据库奔溃时，用户可以通过 frm 文件来回复数据表结构</li>
<li>.MYD 文件：MyISAM 存储引擎创建表时，每个 MyISAM 类型的表都会有一个“.MYD”文件与之对应。用于存放数据表的数据文件</li>
<li>.MYI 文件：对于 MyISAM 存储引擎来说，用于存储表数据文件中任何索引的数据树</li>
<li>.idb 文件和 .ibdata 文件：用于存储 InnoDB 存储引擎的数据，主要包括索引信息</li>
</ol>
</li>
</ol>
<p>p41</p>
]]></content>
      <categories>
        <category>gallery</category>
      </categories>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>redis</title>
    <url>/2021/08/03/redis/</url>
    <content><![CDATA[<h2 id="一、redis-概述-amp-redis-特点"><a href="#一、redis-概述-amp-redis-特点" class="headerlink" title="一、redis 概述 &amp; redis 特点"></a>一、redis 概述 &amp; redis 特点</h2><blockquote>
<p>Redis（Remote Dictionary Server）远程数据服务，是一种支持 key-value 等多种数据结构的存储系统。可用于缓存，事件发布或订阅，高速队列等场景。支持网络，提供 string，hash，list，set，zset 等数据结构，基于内存，可持久化</p>
</blockquote>
<ul>
<li>丰富的数据类型：适用场景多</li>
<li>内存存储：快</li>
<li>持久化：数据安全</li>
</ul>
<h2 id="二、数据结构"><a href="#二、数据结构" class="headerlink" title="二、数据结构"></a>二、数据结构</h2><blockquote>
<p>redis 是 key-value 数据库，key 只能是 string，value 可以是 string、hash、list、set、 sorted set</p>
</blockquote>
<ul>
<li>string：最大存储 512m（set key_name value），信息缓存、计数器、分布式锁</li>
<li>hash：适合存储对象，key-value 集合(hset key_name field value)，购物车（用户id为key，商品id为field，商品数量为value）</li>
<li>list：字符串列表，有序可重复（lpush key_name value1.. value10），是一个分页做定时排行榜</li>
<li>set：字符串无序不可重复集合（sadd key_name value…），收藏夹</li>
<li>sorted set：有序集合（zadd key_name score value），实时排行榜</li>
</ul>
<span id="more"></span>

<h2 id="三、redis-持久化策略"><a href="#三、redis-持久化策略" class="headerlink" title="三、redis 持久化策略"></a>三、redis 持久化策略</h2><blockquote>
<p>将内存中数据存储到磁盘中</p>
</blockquote>
<ul>
<li>RDB：快照存储</li>
<li>AOF：记录写操作，追加到日志文件中，服务器重启时重新执行这些命令</li>
<li>不使用持久化</li>
<li>RDB&amp;AOF：同时开启两种持久化，redis重启时优先载入 AOP 文件来恢复原始数据，AOF中数据比RDB更加完整</li>
</ul>
<h2 id="四、redis-线程模型"><a href="#四、redis-线程模型" class="headerlink" title="四、redis 线程模型"></a>四、redis 线程模型</h2><p>redis 内部使用文件处理器，单线程架构。采用 IO 多路复用机制同时监听多个 socket，根据 socket 上的事件选择对应的事件处理器进行处理<br>单线程高效率：</p>
<ul>
<li>纯内存操作</li>
<li>核心是基于非阻塞的 IO 多路复用机制</li>
<li>单线程避免了多线程上下文切换</li>
</ul>
<h2 id="五、常见问题"><a href="#五、常见问题" class="headerlink" title="五、常见问题"></a>五、常见问题</h2><ul>
<li>雪崩：缓存中大批量 key 过期，请求直接落到数据库。使 key 过期时间均匀，加互斥锁，用不过期</li>
<li>穿透：恶意请求系统中不存在的数据。使用布隆过滤器（爬虫系统url去重、垃圾邮件过滤、黑名单），返回空对象</li>
<li>预热：系统上线后将缓存数据直接加载到缓存系统，避免用户请求直接落到数据库再写到缓存。工程启动时进行加载缓存动作，设置一个定时任务脚本，先保证热点数据提前加载到缓存</li>
<li>击穿：某热点 key 失效瞬间，请求直接落到数据库。增加回血缓存互斥锁，热点 key 永不过期</li>
<li>降级：指缓存失效或者服务器挂掉，不直接访问数据库，直接返回默认值或者访问服务的内存数据，避免数据库遭受巨大压力</li>
</ul>
<h2 id="六、内存淘汰机制"><a href="#六、内存淘汰机制" class="headerlink" title="六、内存淘汰机制"></a>六、内存淘汰机制</h2><blockquote>
<p>redis 缓存不足时，通过淘汰旧数据来处理新加入数据的策略</p>
</blockquote>
<ul>
<li>noeviction：默认策略，对于写请求直接返回错误</li>
<li>allkeys-lru：所有 key 最近最少使用</li>
<li>volatile-rlu：设置了过期时间的 key 最近最少使用</li>
<li>allkeys-random：所有 key 中随机淘汰</li>
<li>volatile-random：从设置了过期时间的 key 中随机淘汰</li>
<li>volatile-ttl：在设计了过期时间的 key 中根据过期时间淘汰最早过期的 key</li>
<li>allkeys-lfu：所有的 key 中，最少使用频率，4.0开始支持</li>
<li>volatile-lfu：设置了过期时间的 key 中，最少使用频率，4.0开始支持</li>
</ul>
<h2 id="七、redis事务机制"><a href="#七、redis事务机制" class="headerlink" title="七、redis事务机制"></a>七、redis事务机制</h2><blockquote>
<p>MULTI 开启，操作命令加入队列，EXEC 命令开始顺序执行。如果执行报错，不会回滚</p>
</blockquote>
<ul>
<li>WATCH：为 redis 提供 check-and-set（CAS）行为。被 WATCH 的 key 如果被改动，则 EXEC 时会返回 nil-reply</li>
<li>MULTI：开启一个事务</li>
<li>UNWATCH：取消 WATCH 命令所有的 key</li>
<li>DISCARD：放弃事务，事务列表被清空，并退出事务状态</li>
<li>EXEC：负责执行事务中所有命令</li>
</ul>
<h2 id="八、redis-主从复制"><a href="#八、redis-主从复制" class="headerlink" title="八、redis 主从复制"></a>八、redis 主从复制</h2><blockquote>
<p>指将一台 redis 服务器数据复制到其他 redis 服务器。前者为主节点（master），后者为从节点（slave）。数据的复制是单向的，只能由主到从</p>
</blockquote>
<p>主从复制作用：</p>
<ul>
<li>数据荣誉：热数据备份</li>
<li>故障恢复：主节点故障，可以由从节点提供服务</li>
<li>负载均衡：读写分离，主节点负责写数据，从节点负责读数据</li>
<li>高可用：是哨兵和集群的基础</li>
</ul>
<p>实现原理：</p>
<blockquote>
<p>三个阶段：连接建立阶段、数据同步阶段、命令传播阶段</p>
</blockquote>
<h2 id="九、哨兵（Sentinel）原理"><a href="#九、哨兵（Sentinel）原理" class="headerlink" title="九、哨兵（Sentinel）原理"></a>九、哨兵（Sentinel）原理</h2><blockquote>
<p>是 redis 高可用的实现方案，管理多个 redis 实例，实现对 redis 的监控、通知、自动故障转移</p>
</blockquote>
<p>问题引入：redis 主从负责模式下，一旦主节点故障无法提供服务，需要手动将从节点晋升为主节点，还需要通知客户端更新主节点地址，这个故障处理方案是不可取的</p>
<h2 id="十、-memcache-amp-redis-区别"><a href="#十、-memcache-amp-redis-区别" class="headerlink" title="十、 memcache &amp; redis 区别"></a>十、 memcache &amp; redis 区别</h2><ul>
<li>memcache 纯内存，数据量不能超过内存，redis 支持持久化</li>
<li>memcache 只支持 string，redis 支持多种</li>
</ul>
<h2 id="十一、客户端"><a href="#十一、客户端" class="headerlink" title="十一、客户端"></a>十一、客户端</h2><ul>
<li>Jedis</li>
<li>Redisson</li>
<li>Lettuce</li>
</ul>
]]></content>
      <categories>
        <category>分布式</category>
      </categories>
      <tags>
        <tag>分布式</tag>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>react</title>
    <url>/2021/12/25/react/</url>
    <content><![CDATA[<blockquote>
<p>用于构建用户界面的 JavaScript 库</p>
</blockquote>
<h2 id="一、Hello-World"><a href="#一、Hello-World" class="headerlink" title="一、Hello World"></a>一、Hello World</h2><figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="title class_">ReactDOM</span>.<span class="title function_">render</span>(</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello, world!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span>,</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<span id="more"></span>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>wudiguang-index<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/react@16/umd/react.production.min.js&quot;</span> <span class="attr">crossorigin</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/react-dom@16/umd/react-dom.production.min.js&quot;</span> <span class="attr">crossorigin</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/babel-standalone@6/babel.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/babel&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> element = <span class="language-xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello, world!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">ReactDOM</span>.<span class="title function_">render</span>( element,<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;root&#x27;</span>));</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="二、JSX-简介"><a href="#二、JSX-简介" class="headerlink" title="二、JSX 简介"></a>二、JSX 简介</h2><blockquote>
<p>是一个 JavaScript 的语法扩展</p>
</blockquote>
<h3 id="2-1-例子"><a href="#2-1-例子" class="headerlink" title="2.1 例子"></a>2.1 例子</h3><figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> element = <span class="language-xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello, world!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span>;</span><br></pre></td></tr></table></figure>

<h3 id="2-2-嵌入表达式"><a href="#2-2-嵌入表达式" class="headerlink" title="2.2 嵌入表达式"></a>2.2 嵌入表达式</h3><figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> name = <span class="string">&#x27;Josh Perez&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> element = <span class="language-xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello, &#123;name&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="title class_">ReactDOM</span>.<span class="title function_">render</span>(</span><br><span class="line">  element,</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<p>JSX 语法中：大括号内防止任何有效的 JavaScript 表达式，如 <code>2+2</code>, <code>user.firstName</code> 或者 <code>formatName(user)</code></p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">formatName</span>(<span class="params">user</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> user.<span class="property">firstName</span> + <span class="string">&#x27; &#x27;</span> + user.<span class="property">lastName</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> user = &#123;</span><br><span class="line">  <span class="attr">firstName</span>: <span class="string">&#x27;Harper&#x27;</span>,</span><br><span class="line">  <span class="attr">lastName</span>: <span class="string">&#x27;Perez&#x27;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> element = (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    Hello, &#123;formatName(user)&#125;!</span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="title class_">ReactDOM</span>.<span class="title function_">render</span>(</span><br><span class="line">  element,</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<h2 id="三、元素渲染"><a href="#三、元素渲染" class="headerlink" title="三、元素渲染"></a>三、元素渲染</h2><p><strong>将一个元素渲染为 DOM</strong></p>
<p>我们将其称为“根” DOM 节点</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>更新已渲染的元素</strong></p>
<blockquote>
<p>daduoshu1 React<br> 大多数 React 应用只会调用一次 ReactDOM.render()</p>
</blockquote>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">tick</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> element = (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello, world!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>It is &#123;new Date().toLocaleTimeString()&#125;.<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    );</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">toLocaleTimeString</span>())</span><br><span class="line">    <span class="title class_">ReactDOM</span>.<span class="title function_">render</span>(element, <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;root&#x27;</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 每秒执行一次</span></span><br><span class="line"><span class="built_in">setInterval</span>(tick, <span class="number">1000</span>);</span><br></pre></td></tr></table></figure>

<h3 id="3-1-React-只更新它需要更新的部分"><a href="#3-1-React-只更新它需要更新的部分" class="headerlink" title="3.1 React 只更新它需要更新的部分"></a>3.1 React 只更新它需要更新的部分</h3><blockquote>
<p>React DOM 会将元素和它的子元素与它们之前的状态进行比较，并只会进行必要的更新来使 DOM 达到预期的状态</p>
</blockquote>
<h2 id="四、组件-amp-Props"><a href="#四、组件-amp-Props" class="headerlink" title="四、组件 &amp; Props"></a>四、组件 &amp; Props</h2><blockquote>
<p>组件允许将 UI 拆分为独立可复用的代码片段，并对每个片段进行独立构思</p>
</blockquote>
<h3 id="4-1-函数组件与-class-组件"><a href="#4-1-函数组件与-class-组件" class="headerlink" title="4.1 函数组件与 class 组件"></a>4.1 函数组件与 class 组件</h3><p><code>该JS函数定义 React 组件，接收唯一参数 props，并返回 React 元素</code></p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Welcome</span>(<span class="params">props</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello, &#123;props.name&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>ES6 的 class</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">class Welcome extends React.Component &#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    return &lt;h1&gt;Hello, &#123;this.props.name&#125;&lt;/h1&gt;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="4-2-渲染组件"><a href="#4-2-渲染组件" class="headerlink" title="4.2 渲染组件"></a>4.2 渲染组件</h3><p>React 元素可以是 DOM 标签，也可以是用户自定义的组件</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> element = <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> /&gt;</span></span>;</span><br><span class="line"><span class="keyword">const</span> element = <span class="language-xml"><span class="tag">&lt;<span class="name">Welcome</span> <span class="attr">name</span>=<span class="string">&quot;Sara&quot;</span> /&gt;</span></span>;</span><br></pre></td></tr></table></figure>

<p>当 React 元素为用户自定义组件时，它会将 JSX 所接收的属性以及子组件转换为单个对象传递给组件，这个对象被称为 “props”</p>
<p>如：</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Welcome</span>(<span class="params">props</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello, &#123;props.name&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> element = <span class="language-xml"><span class="tag">&lt;<span class="name">Welcome</span> <span class="attr">name</span>=<span class="string">&quot;Sara&quot;</span> /&gt;</span></span>;</span><br><span class="line"><span class="title class_">ReactDOM</span>.<span class="title function_">render</span>(</span><br><span class="line">  element,</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<ol>
<li>调用 ReactDOM.render() 函数，并传入 <code>&lt;Welcome name=&quot;Sara&quot; /&gt;</code>作为参数</li>
<li>React 调用 <code>Welcome</code> 组件，并将 <code>&#123;name: &#39;Sara&#39;&#125;</code> 作为 props 传入</li>
<li><code>Welcome</code> 组件将 <code>&lt;h1&gt;Hello,Sara&lt;/h1&gt;</code>元素作为返回值</li>
<li>React DOM 将 DOM 高效地更新为 <code>&lt;h1&gt;Hello, Sara&lt;/h1&gt;</code></li>
</ol>
<p>注意：组件名称必须以大写字母开头</p>
<h3 id="4-3-组合组件"><a href="#4-3-组合组件" class="headerlink" title="4.3 组合组件"></a>4.3 组合组件</h3><blockquote>
<p>组件可以在其输出中引用其他组件</p>
</blockquote>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Welcome</span>(<span class="params">props</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello, &#123;props.name&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Welcome</span> <span class="attr">name</span>=<span class="string">&quot;Sara&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Welcome</span> <span class="attr">name</span>=<span class="string">&quot;Cahal&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Welcome</span> <span class="attr">name</span>=<span class="string">&quot;Edite&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">ReactDOM</span>.<span class="title function_">render</span>(</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">App</span> /&gt;</span></span>,</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<h3 id="4-4-提取组件"><a href="#4-4-提取组件" class="headerlink" title="4.4 提取组件"></a>4.4 提取组件</h3><blockquote>
<p>将组件拆分为更小的组件</p>
</blockquote>
<p>例如，如下 <code>Component</code> 组件：</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Comment</span>(<span class="params">props</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;Comment&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;UserInfo&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">className</span>=<span class="string">&quot;Avatar&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">src</span>=<span class="string">&#123;props.author.avatarUrl&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">alt</span>=<span class="string">&#123;props.author.name&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;UserInfo-name&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          &#123;props.author.name&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;Comment-text&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;props.text&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;Comment-date&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;formatDate(props.date)&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>由于复杂嵌套关系，难以维护且难以复用，因此可以提取一些组件出来</p>
<p><code>Avatar</code> 组件</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Avatar</span>(<span class="params">props</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">className</span>=<span class="string">&quot;Avatar&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">src</span>=<span class="string">&#123;props.user.avatarUrl&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">alt</span>=<span class="string">&#123;props.user.name&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    /&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>进一步提取 <code>UserInfo</code> 组件，该组件在用户名旁渲染 <code>Avatar</code> 组件：</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">UserInfo</span>(<span class="params">props</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;UserInfo&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Avatar</span> <span class="attr">user</span>=<span class="string">&#123;props.user&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;UserInfo-name&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;props.user.name&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>进一步简化 <code>Component</code> 组件</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Comment</span>(<span class="params">props</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;Comment&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">UserInfo</span> <span class="attr">user</span>=<span class="string">&#123;props.author&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;Comment-text&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;props.text&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;Comment-date&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;formatDate(props.date)&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="4-5-Props-的只读性"><a href="#4-5-Props-的只读性" class="headerlink" title="4.5 Props 的只读性"></a>4.5 Props 的只读性</h3><blockquote>
<p>组件无论是使用函数声明还是通过 class 声明，都绝不能修改自身的 props</p>
</blockquote>
<p><code>sum</code> 函数</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">sum</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这样的函数被称为”纯函数”，因为该函数不会尝试更改入参，且多次调用下相同的入参始终返回相同的结果</p>
<p>相反，下面的函数则不是纯函数，它更改了自己的入参</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">withdraw</span>(<span class="params">account, amount</span>) &#123;</span><br><span class="line">  account.<span class="property">total</span> -= amount;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>所有 React 组件都必须像纯函数一样保护它们的 props 不被更改</code></p>
<h2 id="五、State-amp-生命周期"><a href="#五、State-amp-生命周期" class="headerlink" title="五、State &amp; 生命周期"></a>五、State &amp; 生命周期</h2><p><a href="https://react.docschina.org/docs/react-component.html">详细</a></p>
<p>上一章节中时钟的例子中，我们通过调用 <code>ReactDOM.render()</code> 来修改我们想要渲染的元素：</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">tick</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> element = (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello, world!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>It is &#123;new Date().toLocaleTimeString()&#125;.<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">  <span class="title class_">ReactDOM</span>.<span class="title function_">render</span>(</span><br><span class="line">    element,</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">setInterval</span>(tick, <span class="number">1000</span>);</span><br></pre></td></tr></table></figure>

<p>尝试真正复用 <code>Clock</code> 组件，它将设置自己的计时器并每秒更新一次</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Clock</span>(<span class="params">props</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello, world!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>It is &#123;props.date.toLocaleTimeString()&#125;.<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">tick</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="title class_">ReactDOM</span>.<span class="title function_">render</span>(</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Clock</span> <span class="attr">date</span>=<span class="string">&#123;new</span> <span class="attr">Date</span>()&#125; /&gt;</span></span>,</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">setInterval</span>(tick, <span class="number">1000</span>);</span><br></pre></td></tr></table></figure>

<h3 id="5-1-将函数组件转换成-class-组件"><a href="#5-1-将函数组件转换成-class-组件" class="headerlink" title="5.1 将函数组件转换成 class 组件"></a>5.1 将函数组件转换成 class 组件</h3><p>通过以下五步将 <code>Clock</code> 的函数组件转换成 class 组件：</p>
<ol>
<li>创建一个同名的 ES6 class，并且继承于 React.Component</li>
<li>添加一个空的 <code>render()</code> 方法</li>
<li>将函数体移动到 <code>render()</code> 方法中</li>
<li>在 <code>render()</code> 方法中使用 <code>this.props</code> 替换 <code>props</code> </li>
<li>删除剩余的空函数声明</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Clock</span> <span class="keyword">extends</span> <span class="title class_ inherited__">React.Component</span> &#123;</span><br><span class="line">  <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello, world!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>It is &#123;this.props.date.toLocaleTimeString()&#125;.<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>现在 <code>Clock</code> 组件被定义为 class，而不是函数</p>
<p>每次组件更新时 <code>render</code> 方法都会被调用，但只要在相同的 DOM 节点中渲染 <code>&lt;Clock /&gt;</code>，就仅有要给 <code>Clock</code> 组件的 class 实例被创建使用。</p>
<h3 id="5-2-向-class-组件中添加局部的-state"><a href="#5-2-向-class-组件中添加局部的-state" class="headerlink" title="5.2 向 class 组件中添加局部的 state"></a>5.2 向 class 组件中添加局部的 state</h3><ol>
<li>把 <code>render()</code> 方法中的 <code>this.props.date</code> 替换成 <code>this.state.date</code>:</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Clock</span> <span class="keyword">extends</span> <span class="title class_ inherited__">React.Component</span> &#123;</span><br><span class="line">  <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello, world!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>It is &#123;this.state.date.toLocaleTimeString()&#125;.<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>添加一个 class 构造函数，然后在该函数中为 <code>this.state</code> 赋初值:</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Clock</span> <span class="keyword">extends</span> <span class="title class_ inherited__">React.Component</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">props</span>) &#123;</span><br><span class="line">    <span class="variable language_">super</span>(props);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">state</span> = &#123;<span class="attr">date</span>: <span class="keyword">new</span> <span class="title class_">Date</span>()&#125;;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello, world!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>It is &#123;this.state.date.toLocaleTimeString()&#125;.<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>通过以下方式将 <code>props</code> 传递到父类的构造函数中：</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="title function_">constructor</span>(<span class="params">props</span>) &#123;</span><br><span class="line">    <span class="variable language_">super</span>(props);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">state</span> = &#123;<span class="attr">date</span>: <span class="keyword">new</span> <span class="title class_">Date</span>()&#125;;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<p>Clas 组件应该始终使用 <code>props</code> 参数来调用父类的构造函数</p>
<ol start="3">
<li>移除 <code>&lt;Clock /&gt;</code>元素中的 <code>date</code>属性：</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="title class_">ReactDOM</span>.<span class="title function_">render</span>(</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">Clock</span> /&gt;</span></span>,</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<p>完整代码：</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Clock</span> <span class="keyword">extends</span> <span class="title class_ inherited__">React.Component</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">props</span>) &#123;</span><br><span class="line">    <span class="variable language_">super</span>(props);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">state</span> = &#123;<span class="attr">date</span>: <span class="keyword">new</span> <span class="title class_">Date</span>()&#125;;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello, world!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>It is &#123;this.state.date.toLocaleTimeString()&#125;.<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">ReactDOM</span>.<span class="title function_">render</span>(</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">Clock</span> /&gt;</span></span>,</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<p>接下来设置 <code>Clock</code> 的计时器并每秒更新它</p>
<h3 id="5-3-将生命周期方法添加到-Class-中"><a href="#5-3-将生命周期方法添加到-Class-中" class="headerlink" title="5.3 将生命周期方法添加到 Class 中"></a>5.3 将生命周期方法添加到 Class 中</h3><p>当 <code>Clock</code> 组件第一次被渲染到 DOM 中的时候，就为其设置一个计时器，这在 React 中被称为“挂载(mount)”<br>当 DOM 中 <code>Clock</code> 组件被删除时，应该清楚定时器，这被称为“卸载(unmount)”</p>
<p>我们可以为 class 组件声明一些特殊方法，当组件挂载或卸载时就会去执行这些方法：</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Clock</span> <span class="keyword">extends</span> <span class="title class_ inherited__">React.Component</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">props</span>) &#123;</span><br><span class="line">    <span class="variable language_">super</span>(props);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">state</span> = &#123;<span class="attr">date</span>: <span class="keyword">new</span> <span class="title class_">Date</span>()&#125;;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">componentDidMount</span>(<span class="params"></span>) &#123;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">componentWillUnmount</span>(<span class="params"></span>) &#123;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello, world!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>It is &#123;this.state.date.toLocaleTimeString()&#125;.<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>这些方法叫做生命周期方法</code></p>
<p><code>componentDidMount()</code> 方法会在组件已经被渲染到 DOM 中后运行，所以最好在这里设置计时器</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="title function_">componentDidMount</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">timerID</span> = <span class="built_in">setInterval</span>(</span><br><span class="line">        <span class="function">() =&gt;</span> <span class="variable language_">this</span>.<span class="title function_">tick</span>(),</span><br><span class="line">        <span class="number">1000</span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>我们会在 <code>componentWillUnmount</code> 生命周期方法中清除计时器：</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="title function_">componentWillUnmount</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="built_in">clearInterval</span>(<span class="variable language_">this</span>.<span class="property">timerID</span>);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<p>完整例子：</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Clock</span> <span class="keyword">extends</span> <span class="title class_ inherited__">React.Component</span> &#123;</span><br><span class="line">  <span class="comment">// 构造方法，初始化state中的date属性</span></span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">props</span>) &#123;</span><br><span class="line">    <span class="variable language_">super</span>(props);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">state</span> = &#123;<span class="attr">date</span>: <span class="keyword">new</span> <span class="title class_">Date</span>()&#125;;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 组件渲染到 DOM 中后运行</span></span><br><span class="line">  <span class="title function_">componentDidMount</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 设置计时器  </span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">timerID</span> = <span class="built_in">setInterval</span>(</span><br><span class="line">      <span class="function">() =&gt;</span> <span class="variable language_">this</span>.<span class="title function_">tick</span>(),</span><br><span class="line">      <span class="number">1000</span></span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 清除计时器</span></span><br><span class="line">  <span class="title function_">componentWillUnmount</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="built_in">clearInterval</span>(<span class="variable language_">this</span>.<span class="property">timerID</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 设置state中的date属性  </span></span><br><span class="line">  <span class="title function_">tick</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">setState</span>(&#123;</span><br><span class="line">      <span class="attr">date</span>: <span class="keyword">new</span> <span class="title class_">Date</span>()</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello, world!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>It is &#123;this.state.date.toLocaleTimeString()&#125;.<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">ReactDOM</span>.<span class="title function_">render</span>(</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">Clock</span> /&gt;</span></span>,</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<p>细节:</p>
<ol>
<li>当<code>&lt;Clock /&gt;</code> 被传给 <code>ReactDOM.render()</code> 时，React 会调用 <code>Clock</code> 组件的构造函数。同时初始化 <code>this.state</code></li>
<li>之后 React 会调用组件的 <code>render()</code>方法。即 React 确定该在页面上展示什么的方式</li>
<li>当 <code>Clock</code> 的输出被插入到 DOM 中后，React 就会调用 <code>ComponentDidMount()</code> 方法，这个方法中 <code>Clock</code> 组件向浏览器请求设置一个计时器来每秒调用一次组件的 <code>tick()</code> 方法</li>
<li>浏览器每秒都会调用一次 <code>tick()</code> 方法，这个方法中会通过调用 <code>setState()</code> 来更新 date 属性，React 知道 state 改变后会重新调用 <code>render()</code> 方法，将重新加载 <code>state</code> 的值</li>
<li>一旦 <code>Clock</code> 组件从 DOM 中被移除，React 就会调用 <code>componentWillUnmount()</code>方法，这样计时器就会停止</li>
</ol>
]]></content>
      <categories>
        <category>gallery</category>
      </categories>
      <tags>
        <tag>react</tag>
      </tags>
  </entry>
  <entry>
    <title>Test</title>
    <url>/2022/05/04/test/</url>
    <content><![CDATA[<h1 id="测试文档"><a href="#测试文档" class="headerlink" title="测试文档"></a>测试文档</h1><h2 id="我是二级标签"><a href="#我是二级标签" class="headerlink" title="我是二级标签"></a>我是二级标签</h2><h3 id="我是三级标签"><a href="#我是三级标签" class="headerlink" title="我是三级标签"></a>我是三级标签</h3>]]></content>
      <categories>
        <category>gallery</category>
      </categories>
      <tags>
        <tag>test</tag>
      </tags>
  </entry>
  <entry>
    <title>zookeeper</title>
    <url>/2021/08/05/zookeeper/</url>
    <content><![CDATA[<h2 id="一、zookeeper-入门"><a href="#一、zookeeper-入门" class="headerlink" title="一、zookeeper 入门"></a>一、zookeeper 入门</h2><h3 id="1-1-zookeeper-概述"><a href="#1-1-zookeeper-概述" class="headerlink" title="1.1 zookeeper 概述"></a>1.1 zookeeper 概述</h3><blockquote>
<p>zk 是一个开源的分布式协调服务，将复杂且容易出错的分布式一致性服务封装起来，构成一个高效可靠的原语集，提供给用户使用</p>
</blockquote>
<p>zk 提供了高可用、高性能、稳定的分布式数据一致性解决方案。通常被用于实现数据发布&#x2F;订阅、负载均衡、命名服务、分布式协调&#x2F;通知、集群管理、master 选举、分布式锁和分布式队列等功能</p>
<p>另外，zk 将数据保存在内存中，性能很nice</p>
<h3 id="1-2-zk-特点"><a href="#1-2-zk-特点" class="headerlink" title="1.2 zk 特点"></a>1.2 zk 特点</h3><ul>
<li>顺序一致性：客户端发起的事务，按照顺序被应用到 zk 中</li>
<li>原子性：事务请求，对集群中所有的及其应用情况是一样的，要么都成功，要么都失败</li>
<li>单一系统映像：zk 集群保证查询到的数据都是一致的</li>
<li>可靠性：一旦更改请求被应用，数据将持久化</li>
</ul>
<span id="more"></span>

<h3 id="1-3-应用场景"><a href="#1-3-应用场景" class="headerlink" title="1.3 应用场景"></a>1.3 应用场景</h3><ul>
<li>分布式锁：通过创建唯一节点获得分布式锁，当获得锁的一方执行完或者挂掉后就释放锁</li>
<li>命名服务：通过 zk 的顺序节点生成全局唯一 ID</li>
<li>数据发布&#x2F;订阅：通过 Watch 机制，实现数据发布&#x2F;订阅。数据被发布到 zk 的被监听的节点上，其他及其可以通过监听该节点来实现配置的动态更新</li>
</ul>
<blockquote>
<p>开源项目使用 zk：kafka、hbase、hadoop</p>
</blockquote>
<h2 id="二、zk-重点"><a href="#二、zk-重点" class="headerlink" title="二、zk 重点"></a>二、zk 重点</h2><blockquote>
<p>zk 主要是用来协调服务的，不是用来存储业务数据的，不能将大数据放在 zk 中</p>
</blockquote>
<h3 id="2-1-Data-model（数据模型）"><a href="#2-1-Data-model（数据模型）" class="headerlink" title="2.1 Data model（数据模型）"></a>2.1 Data model（数据模型）</h3><blockquote>
<p>类 Linux 系统中文件系统，树形结构</p>
</blockquote>
<h3 id="2-2-znode（数据节点）"><a href="#2-2-znode（数据节点）" class="headerlink" title="2.2 znode（数据节点）"></a>2.2 znode（数据节点）</h3><blockquote>
<p>zk 中最小数据单位</p>
</blockquote>
<ul>
<li>持久节点：持久化，直到被删除</li>
<li>临时节点：生命周期为 和客户端绑定（session），会话消失则节点被删除，临时节点只能做叶子节点，不能创建子节点</li>
<li>持久顺序节点：有序（如 &#x2F;node1&#x2F;app000000001）</li>
<li>临时顺序节点：有序</li>
</ul>
<p>znode 数据结构</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;stat&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;状态信息&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;节点存放的内容&quot;</span>   </span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p><strong>stat 中数据信息</strong></p>
<p>cZxid:create ZXID，即该数据节点被创建时的事务 id<br>ctime:create time，即该节点的创建时间<br>mZxid:modified ZXID，即该节点最终一次更新时的事务 id<br>mtime:modified time，即该节点最后一次的更新时间<br>pZxid:该节点的子节点列表最后一次修改时的事务 id，只有子节点列表变更才会更新 pZxid，子节点内容变更不会更新<br>cversion:子节点版本号，当前节点的子节点每次变化时值增加 1<br>dataVersion:数据节点内容版本号，节点创建时为 0，每更新一次节点内容(不管内容有无变化)该版本号的值增加 1<br>aclVersion:节点的 ACL 版本号，表示该节点 ACL 信息变更次数<br>ephemeralOwner:创建该临时节点的会话的 sessionId；如果当前节点为持久节点，则 ephemeralOwner&#x3D;0<br>dataLength:数据节点内容长度<br>numChildren:当前节点的子节点个数</p>
<h3 id="2-3-ACL（权限控制）"><a href="#2-3-ACL（权限控制）" class="headerlink" title="2.3 ACL（权限控制）"></a>2.3 ACL（权限控制）</h3><p>对于 znode 的操作权限</p>
<ul>
<li>CREATE：支持创建子节点</li>
<li>READ：能查询节点数据和列出子节点</li>
<li>WRITE：能设置&#x2F;更新节点数据</li>
<li>DELETE：能删除子节点</li>
<li>ADMIN：能设置节点 ACL 的权限</li>
</ul>
<p><code>CREATE 和 DELETE 都是对子节点的控制权限</code><br> 对于身份认证，提供以下几种方式：</p>
<ul>
<li>world：默认，any user can use</li>
<li>auth：任何已认证用户</li>
<li>digest： username：password</li>
<li>ip：对指定 IP 限制</li>
</ul>
<h3 id="2-4-Watcher（事件监听器）"><a href="#2-4-Watcher（事件监听器）" class="headerlink" title="2.4 Watcher（事件监听器）"></a>2.4 Watcher（事件监听器）</h3><blockquote>
<p>允许节点注册 Watch，在某些特定事件触发时，zk 服务端会将事件通知到感兴趣的客户端</p>
</blockquote>
<h3 id="2-5-Session（会话）"><a href="#2-5-Session（会话）" class="headerlink" title="2.5 Session（会话）"></a>2.5 Session（会话）</h3><blockquote>
<p>可以看作是 zk 与客户端之间的 TCP 长连接</p>
</blockquote>
<p>Session：sessionTimeout 会话超时时间（范围内，仍属于同一个 session）<br>zk 与客户端创建 session 之前，会为客户端分配一个 sessionID，全局唯一</p>
<h2 id="三、zk-集群"><a href="#三、zk-集群" class="headerlink" title="三、zk 集群"></a>三、zk 集群</h2><blockquote>
<p>为了保证高可用，zk 需集群部署，只要集群中大部分机器可用，则集群可用。集群间通过 ZAB（zk Atomic Broadcase） 保证数据一致性</p>
</blockquote>
<p>典型集群模式：Master&#x2F;Slave（主从模式）</p>
<h3 id="3-1-zk-集群中角色"><a href="#3-1-zk-集群中角色" class="headerlink" title="3.1 zk 集群中角色"></a>3.1 zk 集群中角色</h3><blockquote>
<p>Leader,Follower,Observer</p>
</blockquote>
<ul>
<li>Leader：提供读写，负责投票的发起和决议，更新系统状态</li>
<li>Follower：提供读，参与选举投票，转发写请求给 Leader</li>
<li>Observer：提供读，不参与 Leader 选举</li>
</ul>
<p><strong>leader写数据</strong></p>
<p><strong>读数据</strong></p>
<p>当 Leader 服务器出现网络中断、崩溃退出与重启等异常情况，就会进入 Leader 选举过程</p>
<ol>
<li>Leader election（选举阶段）：只要一个节点得到超过半数节点的票数，则可成为 Leader</li>
<li>Discovery（发现阶段）：Follower 与准 Leader 通信，同步 Follower 最近接收的事务提议</li>
<li>Synchronization（同步阶段）：利用 Leader 前一阶段获得的最新提议历史，同步集群所有的副本。同步完成准 Leader 成为 Leader</li>
<li>Broadcase（广播阶段）：zk 集群正式对外提供事务服务，Leader 可以进行消息广播。若有新节点加入，需对新节点进行同步</li>
</ol>
<h3 id="3-2-zk-集群中服务状态"><a href="#3-2-zk-集群中服务状态" class="headerlink" title="3.2 zk 集群中服务状态"></a>3.2 zk 集群中服务状态</h3><ul>
<li>LOOKING：寻找 Leader</li>
<li>LEADING：Leader 状态，对应的节点为 Leader</li>
<li>FOLLOWING：Follower 状态，对应节点为 Follower</li>
<li>OBSERVING：Observer 状态，对应节点为 Observer，不参与 Leader 选举</li>
</ul>
<h3 id="3-3-zk-集群数量"><a href="#3-3-zk-集群数量" class="headerlink" title="3.3 zk 集群数量"></a>3.3 zk 集群数量</h3><blockquote>
<p>zk 集群，服务器剩余数量大于宕机数量才能继续提供服务。即 2n 和 2n-1 的容忍度是一样的</p>
</blockquote>
<h3 id="3-4-zk-选举的过半机制防止脑裂"><a href="#3-4-zk-选举的过半机制防止脑裂" class="headerlink" title="3.4 zk 选举的过半机制防止脑裂"></a>3.4 zk 选举的过半机制防止脑裂</h3><blockquote>
<p>为保证 zk 集群可用性，服务器通常部署在不同机房，如果机房间网络线路故障，集群被割裂成几个小集群</p>
</blockquote>
<p>过半机制防止脑裂：服务器少于等于一般不可能产生 Leader</p>
<h2 id="四、ZAB-协议和-Paxos-算法"><a href="#四、ZAB-协议和-Paxos-算法" class="headerlink" title="四、ZAB 协议和 Paxos 算法"></a>四、ZAB 协议和 Paxos 算法</h2><h3 id="4-1-ZAB-协议简介"><a href="#4-1-ZAB-协议简介" class="headerlink" title="4.1 ZAB 协议简介"></a>4.1 ZAB 协议简介</h3><blockquote>
<p>ZAB（zk Atomic Broadcast 原子广播）协议是 zk 专门设计的一种支持崩溃恢复的原子广播协议。zk 中主要依赖 ZAB 协议来实现分布式数据一致性，基于该协议，zk 实现了一种主备模式的系统架构来保持集群中各个副本之间数据一致性</p>
</blockquote>
<p>ZAB 协议两种基本的模式：崩溃恢复和消息广播</p>
<ul>
<li>崩溃恢复：当服务框架在启动过程中，或是当 Leader 服务器出现网络中断、崩溃退出与重启等异常时，ZAB 协议就会进入恢复模式并选举新的 Leader。当选举产生了新的 Leader，切已经有过半的机器与 Leader 完成了状态同步后，ZAB 协议就会退出恢复模式。状态同步即数据同步，用来保证集群中存在过半的及其的数据与 Leader 一致</li>
<li>消息广播：当一台遵守 ZAB 协议的服务器启动后加入到集群中时，如果此时集群中已经存在 Leader 在负责进行消息广播，则新加入的服务器会自觉进入数据恢复模式，找到 Leader，进行数据同步</li>
</ul>
<p><strong>选举算法：FastLeaderElection</strong></p>
<ul>
<li>myid：每个 zk 服务器在数据文件夹下创建名为 myid 的文件，内容全局唯一整数 ID</li>
</ul>
<h2 id="五、常用命令"><a href="#五、常用命令" class="headerlink" title="五、常用命令"></a>五、常用命令</h2><ol>
<li>help</li>
<li>create</li>
<li>set</li>
<li>get</li>
<li>ls</li>
<li>stat</li>
<li>ls2（ls + stat）</li>
<li>delete</li>
</ol>
<h2 id="六、总结"><a href="#六、总结" class="headerlink" title="六、总结"></a>六、总结</h2><ol>
<li>zk 是分布式程序（半数以上节点存活则 zk 能正常提供服务）</li>
<li>zk 数据保存在内存中</li>
<li>zk 是高性能</li>
<li>zk 中持久节点&amp;临时节点</li>
<li>zk 底层提供两个功能：管理（存取）程序数据、为用户提供数据节点的监听</li>
</ol>
]]></content>
      <categories>
        <category>分布式</category>
      </categories>
      <tags>
        <tag>分布式</tag>
        <tag>zookeeper</tag>
      </tags>
  </entry>
  <entry>
    <title>ceshi2111</title>
    <url>/2022/05/16/ceshi2/</url>
    <content><![CDATA[<p>针对中国古代大一统国家形态长期延续的问题，周光辉教授指出，在世界历史上，统治广土众民的古代大国并不罕见，但是由于大规模治理与中央集权体制的内在张力，大多数古代帝国都难以长期维系。中国古代大一统国家能够克服大规模治理所带来的张力结构，并在历史上长期发展延续，体现出了一种国家形态的韧性。</p>
<p>关于大一统中国国家韧性的形成，周光辉教授在访谈中提出，首先，文字的统一为古代中国凝成具有历史连续性的文化共同体提供了初始条件。其次，中国古代形成并长期维护着以“大一统”为核心的文化叙事，这种文化叙事长期巩固着大一统国家形态的正当性基底。最后，集乡绅、官吏和知识分子三重角色于一身的士大夫阶层为大一统的巩固与重建提供了必要的组织与舆论准备，这三者共同塑造了国家韧性的形成。与其他主要文明相比，古代大一统中国不存在大一统教会，其文明的长期延续主要表现为一种特定国家形态的长期延续，也就呈现出为人们所观察到的国家韧性。</p>
<p>谈到大一统体制给当代中国的历史遗产，周光辉教授在专访中指出，自秦汉至晚清的大一统国家形态是中国历史上最持久、最重要的国家形态，也是中国现代国家建设的历史起点。大一统国家形态深刻塑造着当代中国的领土空间、族群结构、价值观念和治理模式，为当代中国的国家治理提供了相当丰富的历史遗产。这使得当代中国的政治与社会治理措施既有面向现代化发展的普遍性，又体现着自身文明发展的独特性。</p>
]]></content>
      <categories>
        <category>ceshi2</category>
      </categories>
      <tags>
        <tag>wdn</tag>
        <tag>bai</tag>
      </tags>
  </entry>
  <entry>
    <title>最新测试文章0</title>
    <url>/2022/05/16/ceshi3/</url>
    <content><![CDATA[<h2 id="MyCat-实现高可用读写分离分库分表"><a href="#MyCat-实现高可用读写分离分库分表" class="headerlink" title="MyCat 实现高可用读写分离分库分表"></a>MyCat 实现高可用读写分离分库分表</h2><blockquote>
<p>拦截（SQL 拦截分析&amp;查询结果拦截返回）</p>
</blockquote>
<ul>
<li>mycat：主从复制，读写分离</li>
<li>mycat-web：mycat 可视化界面</li>
<li>HAProxy：mycat 集群</li>
<li>HAProxy + Keepalived：mycat 高可用集群架构</li>
</ul>
]]></content>
      <categories>
        <category>mysql</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>mycat</tag>
      </tags>
  </entry>
  <entry>
    <title>ceshi4</title>
    <url>/2022/05/16/ceshi4/</url>
    <content><![CDATA[<p>针对中国古代大一统国家形态长期延续的问题，周光辉教授指出，在世界历史上，统治广土众民的古代大国并不罕见，但是由于大规模治理与中央集权体制的内在张力，大多数古代帝国都难以长期维系。中国古代大一统国家能够克服大规模治理所带来的张力结构，并在历史上长期发展延续，体现出了一种国家形态的韧性。</p>
<p>关于大一统中国国家韧性的形成，周光辉教授在访谈中提出，首先，文字的统一为古代中国凝成具有历史连续性的文化共同体提供了初始条件。其次，中国古代形成并长期维护着以“大一统”为核心的文化叙事，这种文化叙事长期巩固着大一统国家形态的正当性基底。最后，集乡绅、官吏和知识分子三重角色于一身的士大夫阶层为大一统的巩固与重建提供了必要的组织与舆论准备，这三者共同塑造了国家韧性的形成。与其他主要文明相比，古代大一统中国不存在大一统教会，其文明的长期延续主要表现为一种特定国家形态的长期延续，也就呈现出为人们所观察到的国家韧性。</p>
<p>谈到大一统体制给当代中国的历史遗产，周光辉教授在专访中指出，自秦汉至晚清的大一统国家形态是中国历史上最持久、最重要的国家形态，也是中国现代国家建设的历史起点。大一统国家形态深刻塑造着当代中国的领土空间、族群结构、价值观念和治理模式，为当代中国的国家治理提供了相当丰富的历史遗产。这使得当代中国的政治与社会治理措施既有面向现代化发展的普遍性，又体现着自身文明发展的独特性。</p>
]]></content>
      <categories>
        <category>ceshi2</category>
      </categories>
      <tags>
        <tag>标签2</tag>
        <tag>ceshi</tag>
      </tags>
  </entry>
  <entry>
    <title>【手书】朝你大胯捏一把</title>
    <url>/2022/05/21/qita001/</url>
    <content><![CDATA[<blockquote>
<p><strong>策划：</strong>旌旗可想<br><strong>绘制：</strong>节能型阿端、桀魑魅<br><strong>发布平台：</strong>bilibili<br><strong>链接：</strong><a href="https://www.bilibili.com/video/BV1gT4y1z73Q">【史同&#x2F;忘川风华录】朝你大胯捏一把（瑜策&amp;权策）</a></p>
</blockquote>
]]></content>
      <categories>
        <category>gallery</category>
      </categories>
      <tags>
        <tag>瑜策</tag>
        <tag>权策</tag>
        <tag>旌旗可想</tag>
        <tag>节能型阿端</tag>
        <tag>桀魑魅</tag>
        <tag>手书</tag>
        <tag>bilibili</tag>
      </tags>
  </entry>
  <entry>
    <title>【史向】三国志·吴书·孙破虏讨逆传</title>
    <url>/1997/04/04/sl1997/cs001/</url>
    <content><![CDATA[<blockquote>
<p><strong>作者</strong>：陈寿、裴松之<br><strong>简介</strong>：《三国志》是一部记载三国时期历史的纪传体史书。全书含《魏书》三十卷，《蜀书》十五卷，《吴书》二十卷，共六十五卷，比较完整地记录了东汉末至三国时期近百年的历史。最初三书单行，至北宋始合刻为一，并改称《三国志》。在古代纪传体正史中，与《史记》、《汉书》和《后汉书》并称为前四史。<br><strong>地址</strong>：<a href="http://guoxue.httpcn.com/book/1ce38b9972a449a18aff349009356d50/">https://guoxue.com</a></p>
</blockquote>
<hr>
<p>策字伯符。坚初兴义兵，策将母徙居舒，与周瑜相友，收合士大夫，江、淮间人咸向之。<code>【江表传曰：坚为朱俊所表，为佐军，留家著寿春。策年十馀岁，已交结知名，声誉发闻。有周瑜者，与策同年，亦英达夙成，闻策声闻，自舒来造焉。便推结分好，义同断金，劝策徙居舒，策从之。】</code>坚薨，还葬曲阿。已乃渡江居江都。<code>【魏书曰：策当嗣侯，让与弟匡。】</code></p>
<p>徐州牧陶谦深忌策。策舅吴景，时为丹杨太守，策乃载母徙曲阿，与吕范、孙河俱就景，因缘召募得数百人。兴平元年，从袁术。术甚奇之，以坚部曲还策。<code>【吴历曰：初策在江都时，张纮有母丧。策数诣纮，咨以世务，曰：&quot;方今汉祚中微，天下扰攘，英雄俊杰各拥众营私，未有能扶危济乱者也。先君与袁氏共破董卓，功业未遂，卒为黄祖所害。策虽暗稚，窃有微志，欲从袁扬州求先君馀兵，就舅氏於丹杨，收合流散，东据吴会，报雠雪耻，为朝廷外藩。君以为何如？&quot;纮答曰：&quot;既素空劣，方居衰绖之中，无以奉赞盛略。&quot;策曰：&quot;君高名播越，远近怀归。今日事计，决之於君，何得不纡虑启告，副其高山之望？若微志得展，血雠得报，此乃君之勋力，策心所望也。&quot;因涕泣横流，颜色不变。纮见策忠壮内发，辞令慷慨，感其志言，乃答曰：&quot;昔周道陵迟，齐、晋并兴；王室已宁，诸侯贡职。今君绍先侯之轨，有骁武之名，若投丹杨，收兵吴会，则荆、扬可一，雠敌可报。据长江，奋威德，诛除群秽，匡辅汉室，功业侔於桓、文，岂徒外藩而已哉？方今世乱多难，若功成事立，当与同好俱南济也。&quot;策曰：&quot;一与君同符合契，【同】有永固之分，今便行矣，以老母弱弟委付於君，策无复回顾之忧。&quot;江表传曰：策径到寿春见袁术，涕泣而言曰：&quot;亡父昔从长沙入讨董卓，与明使君会於南阳，同盟结好；不幸遇难，勋业不终。策感惟先人旧恩，欲自凭结，愿明使君垂察其诚。&quot;术甚贵异之，然未肯还其父兵。术谓策曰：&quot;孤始用贵舅为丹杨太守，贤从伯阳为都尉，彼精兵之地，可还依召募。&quot;策遂诣丹杨依舅，得数百人，而为泾县大帅祖郎所袭，几至危殆。於是复往见术，术以坚馀兵千馀人还策。】</code>太傅马日磾杖节安集关东，在寿春以礼辟策，表拜怀义校尉，术大将乔蕤、张勋皆倾心敬焉。术常叹曰：”使术有子如孙郎，死复何恨！”策骑士有罪，逃入术营，隐於内厩。策指使人就斩之，讫，诣术谢。术曰：”兵人好叛，当共疾之，何为谢也？”由是军中益畏惮之。术初许策为九江太守，已而更用丹杨陈纪。后术欲攻徐州，从庐江太守陆康求米三万斛。康不与，术大怒。策昔曾诣康，康不见，使主簿接之。策尝衔恨。术遣策攻康，谓曰：”前错用陈纪，每恨本意不遂。今若得康，庐江真卿有也。”策攻康，拔之，术复用其故吏刘勋为太守，策益失望。先是，刘繇为扬州刺史，州旧治寿春。寿春，术已据之，繇乃渡江治曲阿。时吴景尚在丹杨，策从兄贲又为丹杨都尉，繇至，皆迫逐之。景、贲退舍历阳。繇遣樊能、于麋【陈】东【横屯江津】屯横江津，张英屯当利口，以距术。术自用故吏琅邪惠衢为扬州刺史，更以景为督军中郎将，与贲共将兵击英等，连年不克。策乃说术，乞助景等平定江东。<code>【江表传曰：策说术云：&quot;家有旧恩在东，愿助舅讨横江；横江拔，因投本土召募，可得三万兵，以佐明使君匡济汉室。&quot;术知其恨，而以刘繇据曲阿，王朗在会稽，谓策未必能定，故许之。】</code>术表策为折冲校尉，行殄寇将军，兵财千馀，骑数十匹，宾客愿从者数百人。比至历阳，众五六千。策母先自曲阿徙於历阳，策又徙母阜陵，渡江转斗，所向皆破，莫敢当其锋，而军令整肃，百姓怀之。<code>【江表传曰：策渡江攻繇牛渚营，尽得邸阁粮谷、战具，是岁兴平二年也。时彭城相薛礼、下邳相笮融依繇为盟主，礼据秣陵城，融屯县南。策先攻融，融出兵交战，斩首五百馀级，融即闭门不敢动。因渡江攻礼，礼突走，而樊能、于麋等复合众袭夺牛渚屯。策闻之，还攻破能等，获男女万馀人。复下攻融，为流矢所中，伤股，不能乘马，因自舆还牛渚营。或叛告融曰：&quot;孙郎被箭已死。&quot;融大喜，即遣将于兹乡策。策遣步骑数百挑战，设伏於后，贼出击之，锋刃未接而伪走，贼追入伏中，乃大破之，斩首千馀级。策因往到融营下，令左右大呼曰：&quot;孙郎竟云何！&quot;贼於是惊怖夜遁。融闻策尚在，更深沟高垒，缮治守备。策以融所屯地势险固，乃舍去，攻破繇别将於海陵，转攻湖孰、江乘，皆下之。】</code></p>
<p>策为人，美姿颜，好笑语，性阔达听受，善於用人，是以士民见者，莫不尽心，乐为致死。刘繇弃军遁逃，诸郡守皆捐城郭奔走。<code>【江表传曰：策时年少，虽有位号，而士民皆呼为孙郎。百姓闻孙郎至，皆失魂魄；长吏委城郭，窜伏山草。及至，军士奉令，不敢虏略，鸡犬菜茹，一无所犯，民乃大悦，竞以牛酒诣军。刘繇既走，策入曲阿劳赐将士，遣将陈宝诣阜陵迎母及弟。发恩布令，告诸县：&quot;其刘繇、笮融等故乡部曲来降首者，一无所问；乐从军者，一身行，复除门户；不乐者，勿强也。&quot;旬日之间，四面云集，得见兵二万馀人，马千馀匹，威震江东，形势转盛。】</code>吴人严白虎等众各万馀人，处处屯聚。吴景等欲先击破虎等，乃至会稽。策曰：”虎等群盗，非有大志，此成禽耳。”遂引兵渡浙江，据会稽，屠东冶，乃攻破虎等。<code>【吴录曰：时有乌程邹他、钱铜及前合浦太守嘉兴王晟等，各聚众万馀或数千。引兵扑讨，皆攻破之。策母吴氏曰：&quot;晟与汝父有升堂见妻之分，今其诸子兄弟皆已枭夷，独馀一老翁，何足复惮乎？&quot;乃舍之，馀咸族诛。策自讨虎，虎高垒坚守，使其弟舆请和。许之。舆请独与策会面约。既会，策引白刃斫席，舆体动，策笑曰：&quot;闻卿能坐跃，剿捷不常，聊戏卿耳！&quot;舆曰：&quot;我见刃乃然。&quot;策知其无能也，乃以手戟投之，立死。舆有勇力，虎众以其死也，甚惧。进攻破之。虎奔馀杭，投许昭於虏中。程普请击昭，策曰：&quot;许昭有义於旧君，有诚於故友，此丈夫之志也。&quot;乃舍之。臣松之案：许昭有义於旧君，谓济盛宪也，事见后注。有诚於故友，则受严白虎也。】</code>尽更置长吏，策自领会稽太守，复以吴景为丹杨太守，以孙贲为豫章太守；分豫章为庐陵郡，以贲弟辅为庐陵太守，丹杨朱治为吴郡太守。彭城张昭、广陵张纮、秦松、陈端等为谋主。<code>【江表传曰：策遣奉正都尉刘由、五官掾高承奉章诣许，拜献方物。】</code>时袁术僣号，策以书责而绝之。<code>【吴录载策使张纮为书曰：&quot;盖上天垂司过之星，圣王建敢谏之鼓，设非谬之备，急箴阙之言，何哉？凡有所长，必有所短也。去冬传有大计，无不悚惧；旋知供备贡献，万夫解惑。顷闻建议，复欲追遵前图，即事之期，便有定月。益使怃然，想是流妄；设其必尔，民何望乎？曩日之举义兵也，天下之士所以响应者，董卓擅废置，害太后、弘农王，略烝宫人，发掘园陵，暴逆至此，故诸州郡雄豪闻声慕义。神武外振，卓遂内歼。元恶既毙，幼主东顾，俾保傅宣命，欲令诸军振旅，【於】然河北通谋黑山，曹操放毒东徐，刘表称乱南荆，公孙瓒炰烋北幽，刘繇决力江浒，刘备争盟淮隅，是以未获承命櫜弓戢戈也。今备、繇既破，操等饥馁，谓当与天下合谋，以诛丑类。舍而不图，有自取之志，非海内所望，一也。昔成汤伐桀，称有夏多罪；武王伐纣，曰殷有罪罚重哉。此二王者，虽有圣德，宜当君世；如使不遭其时，亦无繇兴矣。幼主非有恶於天下，徒以春秋尚少，胁於强臣，若无过而夺之，惧未合於汤、武之事，二也。卓虽狂狡，至废主自与，亦犹未也，而天下闻其桀虐，攘臂同心而疾之，以中土希战之兵，当边地劲悍之虏，所以斯须游魂也。今四方之人，皆玩敌而便战斗矣，可得而胜者，以彼乱而我治，彼逆而我顺也。见当世之纷若，欲大举以临之，適足趣祸，三也。天下神器，不可虚干，必须天赞与人力也。殷汤有白鸠之祥，周武有赤乌之瑞，汉高有星聚之符，世祖有神光之徵，皆因民困悴於桀、纣之政，毒苦於秦、莽之役，故能芟去无道，致成其志。今天下非患於幼主，未见受命之应验，而欲一旦卒然登即尊号，未之或有，四也。天子之贵，四海之富，谁不欲焉？义不可，势不得耳。陈胜、项籍、王莽、公孙述之徒，皆南面称孤，莫之能济。帝王之位，不可横冀，五也。幼主岐嶷，若除其偪，去其鲠，必成中兴之业。夫致主於周成之盛，自受旦、奭之美，此诚所望於尊明也。纵使幼主有他改异，犹望推宗室之谱属，论近亲之贤良，以绍刘统，以固汉宗。皆所以书功金石，图形丹青，流庆无穷，垂声管弦。舍而不为，为其难者，想明明之素，必所不忍，六也。五世为相，权之重，势之盛，天下莫得而比焉。忠贞者必曰宜夙夜思惟，所以扶国家之踬顿，念社稷之危殆，以奉祖考之志，以报汉室之恩。其忽履道之节而强进取之欲者，将曰天下之人非家吏则门生也，孰不从我？四方之敌非吾匹则吾役也，谁能违我？盍乘累世之势，起而取之哉？二者殊数，不可不详察，七也。所贵於圣哲者，以其审於机宜，慎於举措。若难图之事，难保之势，以激群敌之气，以生众人之心，公义故不可，私计又不利，明哲不处，八也。世人多惑於图纬而牵非类，比合文字以悦所事，苟以阿上惑众，终有后悔者，自往迄今，未尝无之，不可不深择而熟思，九也。九者，尊明所见之馀耳，庶备起予，补所遗忘。忠言逆耳，幸留神听！&quot;典略云张昭之辞。臣松之以为张昭虽名重，然不如纮之文也，此书必纮所作。】</code>曹公表策为讨逆将军，封为吴侯。<code>【江表传曰：建安二年夏，汉朝遣议郎王誧奉戊辰诏书曰：&quot;董卓逆乱，凶国害民。先将军坚念在平讨，雅意未遂，厥美著闻。策遵善道，求福不回。今以策为骑都尉，袭爵乌程侯，领会稽太守。&quot;又诏敕曰：&quot;故左将军袁术不顾朝恩，坐创凶逆，造合虚伪，欲因兵乱，诡诈百姓，始闻其言以为不然。定得使持节平东将军领徐州牧温侯布上术所造惑众妖妄，知术鸱枭之性，遂其无道，修治王宫，署置公卿，郊天祀地，残民害物，为祸深酷。布前后上策乃心本朝，欲还讨术，为国效节，乞加显异。夫悬赏俟功，惟勤是与，故便宠授，承袭前邑，重以大郡，荣耀兼至，是策输力竭命之秋也。其亟与布及行吴郡太守安东将军陈瑀戮力一心，同时赴讨。&quot;策自以统领兵马，但以骑都尉领郡为轻，欲得将军号，【及】乃使人讽誧，誧便承制假策明汉将军。是时，陈瑀屯海西，策奉诏治严，当与布、瑀参同形势。行到钱塘，瑀阴图袭策，遣都尉万演等密渡江，使持印传三十馀纽与贼丹杨、宣城、泾、陵阳、始安、黟、歙诸险县大帅祖郎、焦已及吴郡乌程严白虎等，使为内应，伺策军发，欲攻取诸郡。策觉之，遣吕范、徐逸攻瑀於海西，大破瑀，获其吏士妻子四千人。山阳公载记曰：瑀单骑走冀州，自归袁绍，绍以为故安都尉。吴录载策上表谢曰：&quot;臣以固陋，孤特边陲。陛下广播高泽，不遗细节，以臣袭爵，兼典名郡。仰荣顾宠，所不克堪。兴平二年十二月二十日，於吴郡曲阿得袁术所呈表，以臣行殄寇将军；至被诏书，乃知诈擅。虽辄捐废，犹用悚悸。臣年十七，丧失所怙，惧有不任堂构之鄙，以忝析薪之戒，诚无去病十八建功，世祖列将弱冠佐命。臣初领兵，年未弱冠，虽驽懦不武，然思竭微命。惟术狂惑，为恶深重。臣凭威灵，奉辞伐罪，庶必献捷，以报所授。&quot;臣松之案：本传云孙坚以初平三年卒，策以建安五年卒，策死时年二十六，计坚之亡，策应十八，而此表云十七，则为不符。张璠汉纪及吴历并以坚初平二年死，此为是而本传误也。江表传曰：建安三年，策又遣使贡方物，倍於元年所献。其年，制书转拜讨逆将军，改封吴侯。】</code>后术死，长史杨弘、大将张勋等将其众欲就策，庐江太守刘勋要击，悉虏之，收其珍宝以归。策闻之，伪与勋好盟。勋新得术众，时豫章上缭宗民万馀家在江东，策劝勋攻取之。勋既行，策轻军晨夜袭拔庐江，勋众尽降，勋独与麾下数百人自归曹公。<code>【江表传曰：策被诏敕，与司空曹公、卫将军董承、益州牧刘璋等并力讨袁术、刘表。军严当进，会术死，术从弟胤、女婿黄猗等畏惧曹公，不敢守寿春，乃共舁术棺柩，扶其妻子及部曲男女，就刘勋於皖城。勋粮食少，无以相振，乃遣从弟偕告籴於豫章太守华歆。歆郡素少谷，遣吏将偕就海昏上缭，使诸宗帅共出三万斛米以与偕。偕往历月，才得数千斛。偕乃报勋，具说形状，使勋来袭取之。勋得偕书，使潜军到海昏邑下。宗帅知之，空壁逃匿，勋了无所得。时策西讨黄祖，行及石城，闻勋轻身诣海昏，便分遣从兄贲、辅率八千人於彭泽待勋，自与周瑜率二万人步袭皖城，即克之，得术百工及鼓吹部曲三万馀人，并术、勋妻子。表用汝南李术为庐江太守，给兵三千人以守皖，皆徙所得人东诣吴。贲、辅又於彭泽破勋。勋走入楚江，从寻阳步上到置马亭，闻策等已克皖，乃投西塞。至沂，筑垒自守，告急於刘表，求救於黄祖。祖遣太子射船军五千人助勋。策复就攻，大破勋。勋与偕北归曹公，射亦遁走。策收得勋兵二千馀人，船千艘，遂前进夏口攻黄祖。时刘表遣从子虎、南阳韩晞将长矛五千，来为黄祖前锋。策与战，大破之。吴录载策表曰：&quot;臣讨黄祖，以十二月八日到祖所屯沙羡县。刘表遣将助祖，并来趣臣。臣以十一日平旦部所领江夏太守行建威中郎将周瑜、领桂阳太守行征虏中郎将吕范、领零陵太守行荡寇中郎将程普、行奉业校尉孙权、行先登校尉韩当、行武锋校尉黄盖等同时俱进。身跨马栎陈，手击急鼓，以齐战势。吏士奋激，踊跃百倍，心精意果，各竞用命。越渡重堑，迅疾若飞。火放上风，兵激烟下，弓弩并发，流矢雨集，日加辰时，祖乃溃烂。锋刃所截，猋火所焚，前无生寇，惟祖迸走。获其妻息男女七人，斩虎、【狼】韩晞已下二万馀级，其赴水溺者一万馀口，船六千馀艘，财物山积。虽表未禽，祖宿狡猾，为表腹心，出作爪牙，表之鸱张，以祖气息，而祖家属部曲，扫地无馀，表孤特之虏，成鬼行尸。诚皆圣朝神武远振，臣讨有罪，得效微勤。&quot;】</code>是时哀绍方强，而策并江东，曹公力未能逞，且欲抚之。<code>【吴历曰：曹公闻策平定江南，意甚难之，常呼&quot;猘儿难与争锋也&quot;。】</code>乃以弟女配策小弟匡，又为子章取贲女，皆礼辟策弟权、翊，又命扬州刺史严象举权茂才。</p>
<p>建安五年，曹公与袁绍相拒於官渡，策阴欲袭许，迎汉帝，<code>【吴录曰：时有高岱者，隐於馀姚，策命出使会稽丞陆昭逆之，策虚己候焉。闻其善左传，乃自玩读，欲与论讲。或谓之曰：&quot;高岱以将军但英武而已，无文学之才，若与论传而或云不知者，则某言符矣。&quot;又谓岱曰：&quot;孙将军为人，恶胜己者，若每问，当言不知，乃合意耳。如皆辨义，此必危殆。&quot;岱以为然，及与论传，或答不知。策果怒，以为轻己，乃囚之。知交及时人皆露坐为请。策登楼，望见数里中填满。策恶其收众心，遂杀之。岱字孔文，吴郡人也。受性聪达，轻财贵义。其友士拔奇，取於未显，所友八人，皆世之英伟也。太守盛宪以为上计，举孝廉。许贡来领郡，岱将宪避难於许昭家，求救於陶谦。谦未即救，岱憔悴泣血，水浆不入口。谦感其忠壮，有申包胥之义，许为出军，以书与贡。岱得谦书以还，而贡已囚其母。吴人大小皆为危竦，以贡宿忿，往必见害。岱言在君则为君，且母在牢狱，期於当往，若得入见，事自当解。遂通书自白，贡即与相见。才辞敏捷，好自陈谢，贡登时出其母。岱将见贡，语友人张允、沈令豫具船，以贡必悔，当追逐之。出便将母乘船易道而逃。贡须臾遣人追之，令追者若及於船，江上便杀之，已过则止。使与岱错道，遂免。被诛时，年三十馀。江表传曰：时有道士琅邪于吉，先寓居东方，往来吴会，立精舍，烧香读道书，制作符水以治病，吴会人多事之。策尝於郡城门楼上，集会诸将宾客，吉乃盛服杖小函，漆画之，名为仙人铧，趋度门下。诸将宾客三分之二下楼迎拜之，掌宾者禁呵不能止。策即令收之。诸事之者，悉使妇女入见策母，请救之。母谓策曰：&quot;于先生亦助军作福，医护将士，不可杀之。&quot;策曰：&quot;此子妖妄，能幻惑众心，远使诸将不复相顾君臣之礼，尽委策下楼拜之，不可不除也。&quot;诸将复连名通白事陈乞之，策曰：&quot;昔南阳张津为交州刺史，舍前圣典训，废汉家法律，尝著绛帕头，鼓琴烧香，读邪俗道书，云以助化，卒为南夷所杀。此甚无益，诸君但未悟耳。今此子已在鬼箓，勿复费纸笔也。&quot;即催斩之，县首於巿。诸事之者，尚不谓其死而云尸解焉，复祭祀求福。志林曰：初顺帝时，琅邪宫崇诣阙上师于吉所得神书於曲阳泉水上，白素朱界，号太平青领道，凡百馀卷。顺帝至建安中，五六十岁，于吉是时近已百年，年在耄悼，礼不加刑。又天子巡狩，问百年者，就而见之，敬齿以亲爱，圣王之至教也。吉罪不及死，而暴加酷刑，是乃谬诛，非所以为美也。喜推考桓王之薨，建安五年四月四日。是时曹、袁相攻，未有胜负。案夏侯元让与石威则书，袁绍破后也。书云：&quot;授孙贲以长沙，业张津以零、桂。&quot;此为桓王於前亡，张津於后死，不得相让，譬言津之死意矣。臣松之案：太康八年，广州大中正王范上交广二州春秋。建安六年，张津犹为交州牧。江表传之虚如志林所云。搜神记曰：策欲渡江袭许，与吉俱行。时大旱，所在熇厉。策催诸将士使速引船，或身自早出督切，见将吏多在吉许，策因此激怒，言：&quot;我为不如于吉邪，而先趋务之？&quot;便使收吉。至，呵问之曰：&quot;天旱不雨，道涂艰涩，不时得过，故自早出，而卿不同忧戚，安坐船中作鬼物态，败吾部伍，今当相除。&quot;令人缚置地上暴之，使请雨，若能感天日中雨者，当原赦，不尔行诛。俄而云气上蒸，肤寸而合，比至日中，大雨总至，溪涧盈溢。将士喜悦，以为吉必见原，并往庆慰。策遂杀之。将士哀惜，共藏其尸。天夜，忽更兴云覆之；明旦往视，不知所在。案江表传、搜神记于吉事不同，未详孰是。】</code>密治兵，部署诸将。未发，会为故吴郡太守许贡客所杀。先是，策杀贡，贡小子与客亡匿江边。策单骑出，卒与客遇，客击伤策。<code>【江表传曰：广陵太守陈登治射阳，登即瑀之从兄子也。策前西征，登阴复遣间使，以印绶与严白虎馀党，图为后害，以报瑀见破之辱。策归，复讨登。军到丹徒，须待运粮。策性好猎，将步骑数出。策驱驰逐鹿，所乘马精骏，从骑绝不能及。初，吴郡太守许贡上表於汉帝曰：&quot;孙策骁雄，与项籍相似，宜加贵宠，召还京邑。若被诏不得不还，若放於外必作世患。&quot;策候吏得贡表，以示策。策请贡相见，以责让贡。贡辞无表，策即令武士绞杀之。贡奴客潜民间，欲为贡报雠。猎日，卒有三人即贡客也。策问：&quot;尔等何人？&quot;答云：&quot;是韩当兵，在此射鹿耳。&quot;策曰：&quot;当兵吾皆识之，未尝见汝等。&quot;因射一人，应弦而倒。馀二人怖急，便举弓射策，中颊。后骑寻至，皆刺杀之。九州春秋曰：策闻曹公北征柳城，悉起江南之众，自号大司马，将北袭许，恃其勇，行不设备，故及於难。孙盛异同评曰：凡此数书，各有所失。孙策虽威行江外，略有六郡，然黄祖乘其上流，陈登间其心腹，且深险强宗，未尽归复，曹、袁虎争，势倾山海，策岂暇远师汝、颍，而迁帝於吴、越哉？斯盖庸人之所鉴见，况策达於事势者乎？又案袁绍以建安五年至黎阳，而策以四月遇害，而志云策闻曹公与绍相拒於官渡，谬矣。伐登之言，为有证也。又江表传说策悉识韩当军士，疑此为诈，便射杀一人。夫三军将士或有新附，策为大将，何能悉识？以所不识，便射杀之，非其论也，又策见杀在五年，柳城之役在十二年，九州春秋乖错尤甚矣。臣松之案：傅子亦云曹公征柳城，将袭许。记述若斯，何其疏哉！然孙盛所讥，未为悉是。黄祖始被策破，魂气未反，【但】且刘表君臣本无兼并之志，虽在上流，何办规拟吴会？策之此举，理应先图陈登，但举兵所在，不止登而已。于时强宗骁帅，祖郎、严虎之徒，禽灭已尽，所馀山越，盖何足虑？然则策之所规，未可谓之不暇也。若使策志获从，大权在手，淮、泗之间，所在皆可都，何必毕志江外，其当迁帝於扬、越哉？案魏武纪，武帝以建安四年已出屯官渡，乃策未死之前，久与袁绍交兵，则国志所云不为谬也。许贡客。无闻之小人，而能感识恩遇，临义忘生，卒然奋发，有侔古烈矣。诗云：&quot;君子有徽猷，小人与属。&quot;贡客其有焉。】</code>创甚，请张昭等谓曰：”中国方乱，夫以吴、越之众，三江之固，足以观成败。公等善相吾弟！”呼权佩以印绶，谓曰：”举江东之众，决机於两陈之间，与天下争衡，卿不如我；举贤任能，各尽其心，以保江东，我不知卿。”至夜卒，时年二十六。<code>【吴历曰：策既被创，医言可治，当好自将护，百日勿动。策引镜自照，谓左右曰：&quot;面如此，尚可复建功立事乎？&quot;椎几大奋，创皆分裂，其夜卒。搜神记曰：策既杀于吉，每独坐，仿佛见吉在左右，意深恶之，颇有失常。后治创方差，而引镜自照，见吉在镜中，顾而弗见，如是再三，因扑镜大叫，创皆崩裂，须臾而死。】</code></p>
<p>权称尊号，追谥策曰长沙桓王，封子绍为吴侯，后改封上虞侯。绍卒，子奉嗣。孙皓时，讹言谓奉当立，诛死。</p>
]]></content>
      <categories>
        <category>史向</category>
      </categories>
      <tags>
        <tag>史向</tag>
      </tags>
  </entry>
  <entry>
    <title>【史向】资治通鉴·汉纪</title>
    <url>/1997/04/09/sl1997/smg002/</url>
    <content><![CDATA[<blockquote>
<p><strong>作者</strong>：司马光<br><strong>简介</strong>：《资治通鉴》是由北宋史学家司马光主编的一部多卷本编年体史书，全书共二百九十四卷，历时十九年完成。内容以政治、军事和民族关系为主，兼及经济、文化和历史人物评价，目的是通过对事关国家盛衰、民族兴亡的统治阶级政策的描述警示后人。宋神宗认为此书“鉴于往事，有资于治道”，即以历史的得失作为鉴诫来加强统治，所以定名为《资治通鉴》。<br><strong>地址</strong>：<a href="https://so.gushiwen.cn/guwen/book_8.aspx">https://so.gushiwen.cn</a></p>
</blockquote>
<hr>
<p>孝献皇帝丙兴平元年<code>【甲戌，公元一九四年】</code></p>
<p>初，孙坚娶钱唐吴氏，生四男策、权、翊、匡及一女。坚从军于外，留家寿春。策年十馀岁，已交结知名。舒人周瑜与策同年，亦英达夙成。闻策声问，自舒来造焉，便推结分好，劝策徙居舒；策从之。瑜乃推道南大宅与策，升堂拜母，有无通共。及坚死，策年十七，还葬曲阿；已乃渡江，居江都，结纳豪俊，有复仇之志。</p>
<p>丹杨太守会稽周昕与袁术相恶，术上策舅吴景领丹杨太守，攻昕，夺其郡，以策从兄贲为丹杨都尉。策以母弟托广陵张纮，径到寿春见袁术。涕泣言曰：“亡父昔从长沙入讨董卓，与明使君会于南阳，同盟结好，不幸遇难，勋业不终。策感惟先人旧恩，欲自凭结，愿明使君垂察其诚！”术甚奇之，然未肯还其父兵，谓策曰：“孤用贵舅为丹杨太守，贤从伯阳为都尉，彼精兵之地，可还依召募。”策遂与汝南吕范及族人孙河迎其母诣曲阿，依舅氏。因缘召募，得数百人，而为泾县大帅祖郎所袭，几至危殆。于是复往见术。术以坚馀兵千馀人还策，表拜怀义校尉。策骑士有罪，逃入术营，隐于内厩。策指使人就斩之，讫，诣术谢。术曰：“兵人好叛，当共疾之，何为谢也！”由是军中益畏惮之。术初许以策为九江太守，已而更用丹杨陈纪。后术欲攻徐州，从庐江太守陆康求米三万斛；康不与。术大怒，遣策攻康，谓曰：“前错用陈纪，每恨本意不遂。今若得康，庐江真卿有也。”策攻康，拔之，术复用其故吏刘勋为太守；策益失望。侍御史刘繇，岱之弟也，素有盛名，诏书用为扬州刺史。州旧治寿春，术已据之，繇欲南渡江，吴景、孙贲迎置曲阿。及策攻庐江，繇闻之，以景、贲本术所置，惧为袁、孙所并，遂构嫌隙，迫逐景、贲。景、贲退屯历阳。繇遣将樊能、于糜屯横江，张英屯当利口以拒之。术乃自用故吏惠衢为扬州刺史，以景为督军中郎将，与贲共将兵击英等。</p>
<p>孝献皇帝丙兴平二年<code>【乙亥，公元一九五年】</code></p>
<p>初，丹杨硃治尝为孙坚校尉，见袁术政德不立，劝孙策归取江东。时吴景攻樊能、张英等，岁馀不克，策说术曰：“家有旧恩在东，愿助舅讨横江。横江拔，因投本土召募，可得三万兵，以佐明使君定天下。”术知其恨，而以刘繇据曲阿，王朗在会稽，谓策未必能定，乃许之。表策为折冲校尉，将兵千馀人、骑数十匹。行收兵，比至历阳，众五六千。时周瑜从父尚为丹杨太守，瑜将兵迎之，仍助以资粮。策大喜，曰：“吾得卿，谐也！”进攻横江、当利，皆拔之，樊能、张英败走。</p>
<p>策渡江转斗，所向皆破，莫敢当其锋者。百姓闻孙郎至，皆失魂魄。长吏委城郭，窜伏山草。及策至，军士奉令，不敢虏略，鸡犬菜茹，一无所犯，民乃大悦，竞以牛酒劳军。策为人，美姿颜，能笑语，性阔达听受，善于用人，是以士民见者莫不尽心，乐为致死。</p>
<p>策攻刘繇牛渚营，尽得邸阁粮谷、战具。时彭城相薛礼、下邳相丹杨笮融依繇为盟主，礼据秣陵城，融屯县南，策皆击破之。又破繇别将于梅陵，攻湖孰、江乘，皆下之，进击繇于曲阿。繇同郡太史慈时自东莱来省繇，会策至，或劝繇可以慈为大将。繇曰：“我若用子义，许子将不当笑我邪！”但使慈侦视轻重。时独与一骑卒遇策于神亭，策从骑十三，皆坚旧将辽西韩当、零陵黄盖辈也。慈便前斗，正与策对，策刺慈马，而揽得慈项上手戟，慈亦得策兜鍪。会两家兵骑并各来赴，于是解散。繇与策战，兵败，走丹徒。策入曲阿，劳赐将士，发恩布令，告谕诸县：“其刘繇、笮融等故乡部曲来降首者，一无所问；乐从军者，一身行，复除门户；不乐者不强。”旬日之间，四面云集，得见兵二万馀人，马千馀匹，威震江东。</p>
<p>丙辰，袁术表策行殄寇将军。策将吕范言于策曰：“今将军事业日大，士众日盛，而纲纪犹有不整者，范愿暂领都督，佐将军部分之。”策曰：“子衡既士大夫，加手下已有大众，立功于外，岂宜复屈小职，知军中细事乎！”范曰：“不然。今舍本土而托将军者，非为妻子也，欲济世务也。譬犹同舟涉海，一事不牢，即俱受其败。此亦范计，非但将军也。”策笑，无以答。范出，便释傕，著袴褶，执鞭诣阁下启事，自称领都督，策乃授传，委以众事。由是军中肃睦，威禁大行。</p>
<p>策以张纮为正议校尉，彭城张昭为长史，常令一人居守，一人从征讨，及广陵秦松、陈端等亦参与谋谟。策待昭以师友之礼，文武之事，一以委昭。昭每得北方士大夫书疏，专归美于昭，策闻之，欢笑曰：“昔管子相齐，一则仲父，二则仲父，而桓公为霸者宗。今子布贤，我能用之，其功名独不在我乎！”</p>
<p>袁术以从弟胤为丹杨太守。周尚、周瑜皆还寿春。刘繇自丹徒将奔会稽，许邵曰：“会稽富实，策之所贪，且穷在海隅，不可往也。不如豫章，北达豫壤，西接荆州；若收合吏民，遣使贡献，与曹兗州相闻，虽有袁公路隔在其间，其人豺狼，不能久也。足下受王命，孟德、景升必相救济。”繇从之。</p>
<p>孝献皇帝丁建安元年<code>【丙子，公元一九六年】</code></p>
<p>孙策将取会稽，吴人严白虎等众各万馀人，处处屯聚，诸将欲先击白虎等。策曰：“白虎等群盗，非有大志，此成禽耳。”遂引兵渡浙江。会稽功曹虞翻说太守王朗曰：“策善用兵，不如避之。”朗不从。发兵拒策于固陵。策数渡水战，不能克。策叔父静说策曰：“朗负阻城守，难可卒拔。查渎南去此数十里，宜从彼据其内，所谓攻其无备，出其不意者也。”策从之，夜，多然火为疑兵，分军投查渎道，袭高迁屯。朗大惊，遣故丹杨太守周昕等帅兵逆战，策破昕等，斩之。朗遁去，虞翻追随营护朗，浮海至东冶，策追击，大破之，朗乃诣策降。策自领会稽太守，复命虞翻为功曹，待以交友之礼。策好游猎，翻谏曰：“明府喜轻出微行，从官不暇严，吏卒常苦之。夫君人者不重则不威，故白龙鱼服，困于豫且，白蛇自放，刘季害之。愿少留意！”策曰：“君言是也。”然不能改。</p>
<p>孝献皇帝丁建安三年<code>【戊寅，公元一九八年】</code></p>
<p>孙策遣其正议校尉张纮献方物，曹操欲抚纳之，表策为讨逆将军，封吴侯；以弟女配策弟匡，又为子彰取孙贲女；礼辟策弟权、翊；以张纮为侍御史。袁术以周瑜为居巢长，以临淮鲁肃为东城长。瑜、肃知术终无所成，皆弃官渡江从孙策。策以瑜为建威中郎将。肃因家于曲阿。曹操表征王朗，策遣朗还。操以朗为谏议大夫，参司空军事。</p>
<p>袁术遣间使赍印绶与丹杨宗帅祖郎等，使激动山越，共图孙策。刘繇之奔豫章也，太史慈遁于芜湖山中，自称丹杨太守。策已定宣城以东，惟泾以西六县未服，慈因进住泾县，大为山越所附。于是策自将讨祖郎于陵阳。禽之。策谓郎曰：“尔昔袭孤，斫孤马鞍，今创军立事，除弃宿恨，惟取能用，与天下通耳，非但汝，汝勿恐怖。”郎叩头谢罪，即破械，署门下贼曹。又讨太史慈于勇里，禽之，解缚，捉其手曰：“宁识神亭时邪？若卿尔时得我云何？”慈曰：“未可量也。”策大笑曰：“今日之事，当与卿共之。闻卿有烈义，天下智士也，但所托未得其人耳。孤是卿知己，勿忧不如意也。”即署门下督。军还，祖郎、太史慈俱在前导，军人以为荣。会刘繇卒于豫章，士众万馀人，欲奉豫章太守华歆为主。歆以为因时擅命，非人臣所宜，众守之连月，卒谢遣之。其众未有所附，策命太史慈往抚安之，谓慈曰：“刘牧往责吾为袁氏攻庐江，吾先君兵数千人，尽在公路许，吾志在立事，安得不屈意于公路以求之乎？其后不遵臣节，谏之不从。丈夫义交，苟有大故，不得不离。吾交求公路及绝之本末如此，恨不及其生时与共论辩也。今儿子在豫章，卿往视之。并宣孤意于其部曲。部曲乐来者与俱来，不乐来者且安慰之。并观华子鱼所以牧御方规何如。卿须几兵，多少随意。”慈曰：“慈有不赦之罪，将军量同桓、文，当尽死以报德。今并息兵，兵不宜多，将数十人足矣。”左右皆曰：“慈必北去不还。”策曰：“子义舍我，当复从谁！”饯送昌门，把腕别曰：“何时能还？”答曰：“不过六十日。”慈行，议者犹纷纭言遣之非计。策曰：“诸君勿复言，孤断之详矣。太史子义虽气勇有胆烈，然非纵横之人，其必秉道义，重然诺，一以意许知己，死亡不相负，诸君勿忧也。”慈果如期而反，谓策曰：“华子鱼，良德也，然无他方规，自守而已。又，丹杨僮芝，自擅庐陵，番阳民帅别立宗部，言‘我已别立郡海昏上缭，不受发召’，子鱼但睹视之而已。”策拊掌大笑，遂有兼并之志。</p>
<p>孝献皇帝戊建安四年<code>【己卯，公元一九九年】</code></p>
<p>扬州贼帅郑宝欲略居民以赴江表，以淮南刘晔，高族名人，欲劫之使唱此谋，晔患之。会曹操遣使诣州，有所案问，晔要与归家，宝来候使者，晔留与宴饮，手刃杀之，斩其首以令宝军曰“曹公有令，敢有动者，与宝同罪！”其众数千人皆龙言服，推晔为主。晔以其众与庐江太守刘勋，勋怪其故，晔曰：“宝无法制，其众素以钞略为利。仆宿无资，而整齐之，必怀怨难久，故以相与耳！”勋以袁术部典众多，不能赡，遣从弟偕求米于上缭诸宗帅，不能满数，偕召勋使袭之。孙策恶勋兵强，伪卑辞以事勋曰：“上缭宗民数欺鄙郡，欲击之，路不便。上缭甚富实，愿君伐之，请出兵以为外援。”且以珠宝、葛越赂勋。勋大喜，外内尽贺，刘晔独否，勋问其故，对曰：“上缭虽小，城坚池深，攻难守易，不可旬日而举也。兵疲于外而国内虚，策乘虚袭我，则后不能独守。是将军进屈于敌，退无所归，若军必出，祸今至矣。”勋不听，遂伐上缭；至海昏，宗帅知之，皆空壁逃迁，勋了无所得。时策引兵西击黄祖，行及石城，闻勋在海昏，策乃分遣从兄贲、辅将八千人屯彭泽，自与领江夏太守周瑜将二万人袭皖城，克之，得术、勋妻子及部曲三万馀人；表汝南李术为庐江太守，给兵三千人以守皖城，皆徙所得民东诣吴。勋还至彭泽，孙贲、孙辅邀击，破之。勋走保流沂，求救于黄祖，祖遣其子射率船军五千人助勋。策复就攻勋，大破之，勋北归曹操，射亦遁走。策收得勋兵二千馀人，船千艘，遂进击黄祖。十二月，辛亥，策军至沙羡，刘表遣从子虎及南阳韩晞，将长矛五千来救祖。甲寅，策与战，大破之，斩晞。祖脱身走，获其妻子及船六千艘，士卒杀溺死者数万人。</p>
<p>策盛兵将徇豫章，屯于椒丘，谓功曹虞翻曰：“华子鱼自有名字，然非吾敌也。若不开门让城，金鼓一震，不得无所伤害。卿便在前，具宣孤意。”翻乃往见华歆曰：“窃闻明府与鄙郡故王府君齐名中州，海内所宗，虽在东垂，常怀瞻仰。”歆曰：“孤不如王会稽。”翻复曰：“不早豫章资粮器仗，士民勇果，孰与鄙郡？”歆曰：“大不如也。”翻曰：“明府言不如王会稽，谦光之谭耳；精兵不如会稽，实如尊教。孙讨逆智略超世，用兵如神，前走刘扬州，君所亲见；南定鄙郡，亦君所闻也。今欲守孤城，自料资粮，已知不足，不早为计，悔无及也。今大军已次椒丘，仆便还去，明日日中迎檄不到者，与君辞矣。”歆曰：“久在江表，常欲北归；孙会稽来，吾便去也。”乃夜作檄，明旦，遣吏赍迎。策便进军，歆葛巾迎策，策谓歆曰：“府君年德名望，远近所归；策年幼稚，宜修子弟之礼。”便向歆拜，礼为上宾。</p>
<p>孙盛曰：歆既无夷、皓韬邈之风，又失王臣匪躬之操，桡心于邪儒之说，交臂于陵肆之徒，位夺节堕，咎孰大焉！</p>
<p>策分豫章为庐陵郡，以孙贲为豫章太守，孙辅为庐陵太守。会僮芝病，辅遂进屯庐陵，留周瑜镇巴丘。孙策之克皖城也，抚视袁术妻子；及入豫章，收载刘繇丧，善遇其家。士大夫以是称之。会稽功曹魏腾尝策意，策将杀之，众忧恐，计无所出。策母吴夫人倚大井谓策曰：“汝新造江南，其事未集，方当优贤礼士，舍过录功。魏功曹在公尽规，汝今日杀之，则明日人皆叛汝。吾不忍见祸之及，当先投此井中耳！”策大惊，遽释腾。初，吴郡太守会稽盛宪举高岱孝廉。许贡来领郡，岱将宪避难于营帅许昭家。乌程邹佗、钱铜及嘉兴王晟等各聚众万馀或数千人，不附孙策。策引兵扑讨，皆破之，进攻严白虎。白虎兵败，奔馀杭，投许昭。程普请击昭，策曰：“许昭有义于旧君，有诚于故友，此丈夫之志也。”乃舍之。</p>
<p>孝献皇帝戊建安五年<code>【庚辰，公元二零零年】</code></p>
<p>广陵太守陈登治射阳，孙策西击黄祖，登诱严白虎馀党，图为后害，策还击登，军到丹徒，须待运粮。初，策杀吴郡太守许贡，贡奴客潜民间，欲为贡报仇。策性好猎，数出驱驰，所乘马精骏，从骑绝不能及，卒遇贡客三人，射策中颊，后骑寻至，皆刺杀之。策创甚，召张昭等谓曰：“中国方乱，以吴、越之众，三江之固，足以观成败，公等善相吾弟！”呼权，佩以印绶，谓曰：“举江东之众，决机于两陈之间，与天下争衡，卿不如我；举贤任能，各尽其心以保江东，我不如卿。”丙年，策卒，时年二十六。权悲号，未视事，张昭曰：“孝廉，此宁哭时邪！”乃改易权服，扶令上马，使出巡军。昭率僚属，上表朝廷，下移属城，中外将校，各令奉职，周瑜自巴丘将兵赴丧，遂留吴，以中护军与张昭共掌众事。时策虽有会稽、吴郡、丹杨、豫章、庐江、庐陵，然深险之地，犹未尽从，流寓之士，皆以安危去就为意，未有君臣之固，而张昭、周瑜等谓权可与共成大业，遂委心而服事焉。</p>
<p>曹操闻孙策死，欲因丧伐之。侍御史张纮谏曰：“乘人之丧，既非古义，若其不克，成仇弃好，不如因而厚之。”操即表权为讨虏将军，领会稽太守。操欲令纮辅权内附，及以纮为会稽东部都尉。纮至吴，太夫人以权年少，委纮与张昭共辅之。纮惟补察，知无不为。太夫人问扬武都尉会稽董袭曰：“江东可保不？”袭曰：“江东有山川之固，而讨逆明府恩德在民，讨虏承基，大小用命，张昭秉众事，袭等为爪牙，此地利人和之时也，万无所忧。”权遗张纮之部，或以纮本受北任，嫌其志趣不止于此，权不以介意。</p>
]]></content>
      <categories>
        <category>史向</category>
      </categories>
      <tags>
        <tag>史向</tag>
      </tags>
  </entry>
  <entry>
    <title>【史向】后汉书</title>
    <url>/1997/04/07/sl1997/fy003/</url>
    <content><![CDATA[<blockquote>
<p><strong>作者</strong>：范晔<br><strong>简介</strong>：《后汉书》是南朝宋时期历史学家范晔编撰的史类文学作品，属“二十四史”之一。与《史记》、《汉书》、《三国志》合称“前四史”。分十纪、八十列传和八志（取自司马彪《续汉书》），全书主要记述了汉光武帝建武元年至汉献帝建安二十五年共一百九十五年的史事。<br><strong>地址</strong>：<a href="https://so.gushiwen.cn/guwen/book_41.aspx">https://so.gushiwen.cn</a></p>
</blockquote>
<hr>
<p>自孙坚死，子策复领其部曲，术遣击杨州刺史刘繇，破之，策因据江东。策闻术将欲僭号，与书谏曰：</p>
<p>董卓无道，陵虐王室，祸加太后，暴及弘农，天子播越，宫庙焚毁，是以豪桀发愤，沛然俱起。元恶既毙，幼主东顾，乃使王人奉命，宣明朝恩，偃武修文，与之更始。然而河北异谋于黑山，曹操毒被于东徐，刘表僭乱于南荆，公孙叛逆于朔北，正礼阻兵，玄德争盟，是以未获从命，橐弓戢戈。当谓使君与国同规，而舍是弗恤，完然有自取之志，惧非海内企望之意也。成汤讨桀，称：有夏多罪”；武王讨纣，曰“殷有重罚”。此二王者，虽有圣德，假使时无失道之过，无由逼而取也。今主上非有恶于天下，徒以幼小胁于强臣，异于汤、武之时也。又闻幼主明智聪敏，有夙成之德，天下虽未被其恩，咸归心焉。若辅而兴之，则旦、奭之美，率土所望也。使君五世相承，为汉宰辅，荣宠之盛，莫与为比，宜效忠守节，以报王室。时人多惑图纬之言，妄牵非类之文，苟以悦主为美，不顾成败之计，古今所慎，可不熟虑！忠言逆耳，驳议致憎，苟有益于尊明，无所敢辞。</p>
<p>术不纳，策遂绝之。</p>
]]></content>
      <categories>
        <category>史向</category>
      </categories>
      <tags>
        <tag>史向</tag>
      </tags>
  </entry>
  <entry>
    <title>【史向】建康实录</title>
    <url>/1997/04/10/sl1997/xs004/</url>
    <content><![CDATA[<blockquote>
<p><strong>作者</strong>：许嵩<br><strong>简介</strong>：《建康实录》是唐代许嵩编撰的六朝史料集，书中记载建都建康（今南京）的吴、东晋、宋、齐、梁、陈六代史实及轶事的别史。全书二十卷，已残缺。作于《三国志》、《晋书》、《宋书》、《南齐书》、《梁书》、《陈书》、《水经注》、《南史》之后，并且记录着某些正史不载的资料，所以常为后来考证六朝史事者所引徵。<br><strong>地址</strong>：<a href="http://guoxue.httpcn.com/html/book/RNILAZ/ILUYILRNTB.shtml">https://guoxue.cn</a></p>
</blockquote>
<hr>
<p>坚生四子：策、权、翊、匡。 <code>【案，《志林》：孙坚生五子：策、权、翊、匡，吴氏所生，仁即庶子。】</code>孙策时年十七，父亡后往见广陵人张纮，谘世务事，言雪先君之耻于黄祖，词切意正，涕泣横流。纮心奇之，助成其事。策因委以母及诸弟，径往寿春见袁术，垂涕而言：“亡父昔从长沙入讨董卓，与明使君同盟结好于南阳，不幸遇难，勋业不终。策感惟先人旧恩，欲自凭结，愿明使君察其深诚。”术甚异之，以其父众千人配焉，表为汉折冲校尉，使破庐江太守陆康，时汉献帝兴平元年也。明年冬，术以策为殄寇将军。初，袁术表策舅吴景为丹杨太守，及术据寿春，而扬州刺史刘繇走，渡江，遂逐景，奔历阳。策因谘术征繇，领兵千余，骑数十匹，宾客乐从者数百人，兴平二年十二月发自寿阳，比至历阳，众已五六千。济于横江，大破刘繇牛渚营，追败繇于曲阿，转斗千里，郡县归伏。遂东破严白虎于会稽，白虎走，义士许昭匿之。程普请讨昭，策曰：“有义于旧君，有诚于故友，此丈夫之志也。”遂舍昭引军屠东冶，白虎降，杀之。改置官吏，镇于会稽。破太史慈于泾口，复任之。以舅吴景复领丹杨太守。南讨豫章、庐陵定之。时袁术将僭大号于江北，策乃使张纮为书绝之，自领会稽太守，以张昭、张纮等为腹心谋主。遂调时节贡赋于汉，曹操乃表策为讨逆将军，封吴侯。策虽外见受官，内怀三分之计。及袁术败死，其部曲将术家属归庐江太守刘勋。策既定江东，遂引兵与周瑜西渡，袭皖城，大破刘勋于庐江，取袁术乘舆百工器物而归，以李术为庐江太守，守皖。初，荆州刺史刘表使黄祖子射来救刘勋，策转破射于西塞之水，而追杀其将刘虎、韩晞于沙羡县，还定豫章，走华歆。以从兄贲领豫章太守，留贲弟辅将兵住南昌，策谓贲曰：“僮芝自署庐陵太守，兄今据豫章，是扼其咽喉而守其门户也。但当伺其形便，因令国仪杖兵而进，一举可定矣。”<code>【案，《江表传》：后孙贲闻僮芝病，即如策计，引周瑜上巴丘，外为形势，遂与其弟辅进庐陵而据之。】</code></p>
<p>时曹操既扼袁绍而不能禁，因与策为好，以弟女配策小弟匡，复为子章取策从兄贲女为夫人。</p>
<p>建安五年四月，广陵太守陈登治射阳，阴遣间使以印绶与严白虎余党，于会稽图取策。策密知之，讨登，至丹徒。闻曹操与袁绍相拒于官渡，将欲谋渡江迎献帝。</p>
<p>初，吴郡太守许贡见策英杰，乃表“策勇盖天下，骁雄似项羽，请朝廷征入，不然必为后患。”策微知，使人遮得其表，而召贡责之，令武士绞杀。及此兵屯江上，因出猎，马骏，去从骑远，为贡客许昭伏刺之，伤面。</p>
<p>时琅琊道士于吉有道术，往来吴中，言事多验，诸将委策拜吉三分之二，策恶之。既至丹徒，责其水旱事，诛吉。自后每独坐，常见吉在左右。及许昭所伤，治疮方差，策性刚，取镜照面，见所伤疮，乃怒曰：“大丈夫将建功业，而令面如此！”遂掷镜大叫，疮裂而死，时年二十六。<code>【案，《搜神记》：既杀于吉，每照镜，见吉在其中，顾而不见，如是再三。因掷镜大叫，疮裂，须臾而死也。】</code></p>
<p>以后事付弟权，托长史张昭、张纮辅佐之，临终顾谓权曰：“举江东之众，决机于两阵之间，与天下争衡，卿不如我；举贤任能，各尽其心，以保江东，我不如卿。”言终而卒。权临丧未及息，张昭谓权曰：“夫为人后者，贵能负荷先轨，克昌堂构，以成勋业。方今天下鼎沸，豺狼满道，此宁哭时，犹开门待盗，未为仁也。”乃改权服，扶上马，使出巡行军伍。<code>【案，《江表记》：坚为下邳丞，生权，广额大口，目有精光，坚异之，以必有大贵。随兄策征伐，每立奇谋，策顾权谓众，曰：“此真诸君将军也。”】</code></p>
<p>是时吴始有会稽、吴郡、丹阳、豫章、庐陵等郡，深崄之地犹未尽从，而天下英豪布在州郡，宾客之士以安危去就为意，未有君臣之固。权既统事，以周瑜、程普、吕范等为爪牙，将军鲁肃、诸葛瑾、步骘、陆逊为腹心宾客，招延英俊而分部诸将，镇抚山越，讨不从命。使太史慈镇海昏，韩当、周泰、吕蒙为剧县长。</p>
<p>建安六年春，策所置庐江太守李术闻策死，遂不从命，乃与权书曰：“有德见归，无德见叛，不应还。”权怒，自征之，枭首，屠其城，徙其部曲二万人从东渡江。</p>
]]></content>
      <categories>
        <category>史向</category>
      </categories>
      <tags>
        <tag>史向</tag>
      </tags>
  </entry>
  <entry>
    <title>【史向】太平御览</title>
    <url>/1997/04/12/sl1997/lf005/</url>
    <content><![CDATA[<blockquote>
<p><strong>作者</strong>：李昉、李穆、徐铉等<br><strong>简介</strong>：《太平御览》是宋代著名的类书，由李昉、李穆、徐铉等学者奉敕编纂，采以群书类集之，凡分五十五部五百五十门而编为千卷，所以初名为《太平总类》，据说书成之后，宋太宗每天看三卷，一岁而读周，所以又更名为《太平御览》。全书以天、地、人、事、物为序，分成五十五部，可谓包罗古今万象。书中共引用古书一千多种，保存了大量宋代以前的文献资料，但其中十之七八已经亡佚，更使本书显得弥足珍贵，是中国传统文化的宝贵遗产。<br><strong>地址</strong>：<a href="http://www.gushicimingju.com/dianji/taipingyulan/">https://www.gushici.com</a></p>
</blockquote>
<hr>
<p>《通典》曰：后汉末陈登为广陵守，孙策遣军攻登於匡琦城，登使人求救於曹公。而密去城十里理军营处所，令多取柴薪，两束一聚，相去十步，从横成行，令俱起火，火燃其聚。城上称庆，若大军到。贼睹火惊溃，登勒兵追奔，斩首万级也。</p>
<p>《后汉书》曰：庐江太守刘勋理明城，恃兵强士勇，横于江、淮之间，无出其右者，孙策恶之。时已有江左，自领会稽太守，使人卑辞厚币而说之曰：”海昏上缭宗人，数欺下国，患之有年矣。击之路由不便，幸因将军之神武而临之。且上缭国富廪实，吴娃越姬，充于后庭，明珠大贝，被于帑藏，取之可以资军。虽蜀郡成都金碧之府，未能过也。策愿举敝邑士卒以为外援。”勋然之。刘晔谏曰：”上缭虽小，而城坚池深。守之则易，攻之则难，不可旬月而拔也。且见疲於外而国虚於内。孙策多谋而善用兵，乘虚袭我，将何御之？而将军进屈于敌，退无所归。羝羊触藩羸其角，不能退不能进，其在兹乎？”勋不从。遂大兴师伐上缭，其庐江果为策所袭。勋穷蹙，遂奔曹公。</p>
<p>《语林》曰：孙策，年十四诣袁术，俄而外通刘豫州来，孙便求去。袁曰：”刘豫州何若？”答曰：”英雄忌人。”既出，下东阶，而刘备从西阶上，但得转顾视孙足，行殆不复前矣。</p>
<p>《吴录》曰：孙策欲渡江，船少，欲往便求策姑王氏，分命伐芦为樑，以佐船渡人。</p>
<p>又曰：孙策骑士有罪，逃入袁术营，隐於内厩，策指使人就斩之，讫，诣术谢。术曰：”兵人好叛，当共疾之，何为谢耶？”</p>
<p>《吴志》曰：：张纮字子纲，广陵人也。孙策遣纮奉章至许宫，留为侍御史，少府孔融等皆与亲善。</p>
<p>张勃《吴录》曰：长沙桓王在历阳，遣书呼周瑜。瑜将兵五百人，船粮器杖，星夜驰赴。王大喜，执瑜手曰：”卿至，谐矣。”</p>
<p>胡冲《吴历》曰：太史慈，字子义，於神亭战败，为孙策所执。策素闻其名，即解缚咨问进取之术。慈曰：”州郡新破，士卒离心，若倘分散，难复合聚；欲出宣恩安集，恐不合尊旨。”策长跪答曰：”诚本心所望也。明日日中，望君来还。”诸将皆疑，策曰：”太史子义，青州名士，以信义为先，终不欺策。”明日，大会诸将，预设酒食，立竿视中而慈至，策大欢喜，常与参论军事。</p>
]]></content>
      <categories>
        <category>史向</category>
      </categories>
      <tags>
        <tag>史向</tag>
      </tags>
  </entry>
  <entry>
    <title>【史向】祭吴桓王庙文</title>
    <url>/1997/04/26/sl1997/ym006/</url>
    <content><![CDATA[<blockquote>
<p><strong>作者</strong>：袁枚<br><strong>简介</strong>：1742年为祭奠三国东吴长沙桓王孙策所作的一篇骈体文。<br><strong>地址</strong>：<a href="https://baike.baidu.com/item/%E7%A5%AD%E5%90%B4%E6%A1%93%E7%8E%8B%E5%BA%99%E6%96%87/23506002">https://baike.baidu.com</a></p>
</blockquote>
<hr>
<p>余年十七读吴桓王传，心感慕焉。后十年宰江宁，过铜井庙，有美少年像，披王者冕旒，英年奕奕。野人曰，是桓王也。余欷歔拜谒，奠少牢，为民祈福，而使祝读文曰：</p>
<p>惟正值天地之睢剌，为孤露之童牙。初亡姑蔑之旗，便射徒林之兕。先破虏将军，玉玺方收，金棺遽埋，有功帝室，未享侯封。<br>王收斟灌之遗兵，零星一旅；就渭阳之舅氏，涕泪千行。志在复仇，身先下士。神亭掷戟，立杆知太史之心；金鼓开城，解甲拜子鱼之坐。鸣角以招部曲，戌衣而习春秋。则有公瑾同年，舍道南之宅；乔公淑女，联吉偶之欢。自觉风流，私夸二婿；有谁旗鼓，敢斗三军。江有雾以皆清，陈无坚而不破。待豪杰如一体，用降兵如故人。逐奉佛之笮融，功高明帝；诛妖言之于吉，识过茂陵。起家曲阿，收兵牛渚。廓清吴会，奄有江东。</p>
<p>百姓以为龙自天来，虎凭风至，势必山倾地坼，井堙木刊矣。而乃望见兜鍪，陈平冠玉；再瞻谈笑，子晋神仙。三军无鸡犬之惊，千里有壶浆之献。气吞魏武，避猘儿之锋；表奏汉皇，迎许昌之驾。盖不逾年而大勋集矣。不图天意佳兵，三分已定；丹徒逐鹿，一矢相遗。剑出匣以沙埋，日东升而云掩。天实为之，非偶然也。</p>
<p>夫汉家之火德方衰，妖谶之黄龙已死。王如创业，美矣君哉。然观其绝公路之手书，宣昭大义；问刘繇之儿子，缱绻平生。虽神勇之非常，偏深情之若揭。就使请隧周室，谋鼎晖台，必非操、莽之奸邪，终见高、光之磊落也。而说者谓坐竟垂堂，勇忘重闭，未免粗同项羽，死类诸樊。不知伏弩军门，亦伤刘季；深追铜马，几失萧王。成败论人，古今同慨。彼齐武王之沉鸷，晋悼公之雍容，俱未轻身，亦无永岁，抑有何也？</p>
<p>今者庙貌虽颓，风云自在。端坐悒悒，郎君之神采珊然；秋草茫茫，讨逆之旌旗可想。三吴士女，皆王之遗民；六代云山，皆王之陈迹。守土官袁枚，幼读史书，掩卷生慕。来瞻祠宇，雪涕沾襟。难从隔代以执鞭，误欲升堂而拜母。修下士天台之表，寄将军帐下之儿。愿安泰历之坛，永锡编氓之福。勿孤普淖，鉴此丹诚。呜呼！千载论交，王识少年之令尹；九原若作，吾从总角之英雄！</p>
]]></content>
      <categories>
        <category>史向</category>
      </categories>
      <tags>
        <tag>史向</tag>
      </tags>
  </entry>
  <entry>
    <title>【史向】相关诗词合集</title>
    <url>/1997/04/28/sl1997/sc007/</url>
    <content><![CDATA[<h3 id="（排名不分先后）"><a href="#（排名不分先后）" class="headerlink" title="（排名不分先后）"></a>（排名不分先后）</h3><p>1、《吴桓王庙》清，袁枚<br>掷戟神亭一笑分，英雄名号尚郎君。<br>南来剑夺中原色，猎罢龙惊草上云。<br>自觉风流夸二婿，有谁旗鼓斗三军？<br>千年愿献铙歌曲，帐下还愁子布闻。</p>
<p>2、《孙伯符》宋，刘克庄<br>霸略谁堪敌伯符，每开史册想规模。<br>一千扫众横江去，十七成功自古无。<br>不分老瞒称猘子，便呼公瑾作姨夫。<br>君看末命尤奇特，指顾张昭为托孤。 ​​​</p>
<p>3、《泛富春江》宋，陆游<br>双橹摇江叠鼓催，伯符故国喜重来。<br>秋山断处望渔浦，晓日升时离钓台。<br>官路已悲捐岁月，客衣仍悔犯风埃。<br>还家正及鸡豚社，剩伴邻翁笑口开。 ​​​</p>
<p>4、《江城子·伯符》现代，佚名<br>十八名垂曲阿上，开国疆，守四方。<br>身穿金甲，脚踏尘世浪。<br>醉卧六郡谈笑间，顺者昌，逆者亡。<br>莫道泪流三千丈，英年殇，又何妨！<br>乔女倾慕，公瑾佐身旁。<br>试问江东谁不知，小霸王，是孙郎。</p>
<p>5、《孙伯符墓下》 宋，周弼<br>梧叶萧萧墓草长，梦魂曾断九回肠。<br>空闻绛帕离章水，谁见黄旗入洛阳。<br>鸦噪暮园江阪迥，龙盘春戍石城荒。<br>赤乌不识桑田变，犹自悽悽守白杨。</p>
<p>6、《吴门晚泊寄句曲道友》唐，罗隐<br>采香径在人不留，采香径下停叶舟。<br>桃花李花斗红白，山鸟水鸟自献酬。<br>十万梅鋗空寸土，三分孙策竟荒丘。<br>未知到了关身否，笑杀雷平许远游。</p>
<p>7、《次韵答刘景文左藏》宋，苏轼<br>我老诗坛仆鼓旗，借君佳句发良时。<br>但空贺监杯中物，莫示孙郎帐下儿。<br>夜烛催诗金烬落，秋芳压帽露华滋。<br>故应好语如爬痒，有味难名只自知。</p>
<p>8、《长沙王墓在阊门外》宋，范成大<br>英雄转眼逐东流，百战工夫土一抔。<br>荞麦茫茫花似雪，牧童吹笛上高丘。</p>
<p>9、《念奴娇·云峰横起》宋，叶梦得<br>云峰横起，障吴关三面，真成尤物。倒卷回潮目尽处，秋水黏天无壁。绿鬓人归，如今虽在，空有千茎雪。追寻如梦，漫余诗句犹杰。<br>闻道尊酒登临，孙郎终古恨，长歌时发。万里云屯瓜步晚，落日旌旗明灭。鼓吹风高，画船遥想，一笑吞穷发。当时曾照，更谁重问山月。</p>
<p>10、《雨花台怀古》近代，袁世凯<br>我今独上雨花台，万古英雄付劫灰；<br>谓是孙策破刘处，相传梅锅屯兵来。<br>大江滚滚向东去，寸心郁郁何时开？<br>只等毛羽一丰满，飞下九天拯鸿哀。</p>
<p>11、《长沙桓王墓下别李纾、张南史》 唐，刘长卿<br>长沙千载后，春草独萋萋。<br>流水朝将暮，行人东复西。<br>碑苔几字灭，山木万株齐。<br>伫立伤今古，相看惜解携。</p>
<p>12、《孙王墓》宋，王宾<br>千里争衡最少年，马骄风疾喜行前。<br>正当许下迎天子，玉树生埋在九泉。</p>
]]></content>
      <categories>
        <category>史向</category>
      </categories>
      <tags>
        <tag>史向</tag>
      </tags>
  </entry>
  <entry>
    <title>【史向】相关链接合集</title>
    <url>/1997/04/30/sl1997/lj008/</url>
    <content><![CDATA[<h3 id="（排名不分先后）"><a href="#（排名不分先后）" class="headerlink" title="（排名不分先后）"></a>（排名不分先后）</h3><p>1、《祭吴桓王庙文》<br><a href="https://baike.baidu.com/item/%E7%A5%AD%E5%90%B4%E6%A1%93%E7%8E%8B%E5%BA%99%E6%96%87/23506002">https://baike.baidu.com</a></p>
<p>2、《三国志·吴书·孙破虏讨逆传》<br><a href="http://www.guoxue.com/shibu/24shi/sangzz/sgzz_046.htm">https:www.guoxue.com</a></p>
<p>3、《三国演义》<br><a href="http://www.purepen.com/sgyy/">http://www.purepen.com/sgyy/</a></p>
<p>4、如何称呼十六岁的孙策？<br><a href="http://tieba.baidu.com/p/1430104690">http://tieba.baidu.com/p/1430104690</a></p>
<p>5、偏师如电扫江东——孙策行军路线图<br><a href="http://tieba.baidu.com/p/1303765890">http://tieba.baidu.com/p/1303765890</a></p>
<p>6、孙策曾用水缸渡江<br><a href="http://tieba.baidu.com/p/1391029429">http://tieba.baidu.com/p/1391029429</a></p>
<p>7、夸夸爱老妈爱弟弟的好少年孙策<br><a href="http://tieba.baidu.com/p/1427235140">http://tieba.baidu.com/p/1427235140</a></p>
<p>8、《孙吴建国的道路》污蔑孙策诛杀会稽盛，周<br><a href="http://tieba.baidu.com/p/1416960002">http://tieba.baidu.com/p/1416960002</a></p>
<p>9、孙策不会用人？《孙吴建国的道路》对史料的断章取义<br><a href="http://tieba.baidu.com/p/1408289727">http://tieba.baidu.com/p/1408289727</a></p>
<p>10、英雄转眼逐东流——从历代诗词看孙策墓<br><a href="http://tieba.baidu.com/p/1693986287">http://tieba.baidu.com/p/1693986287</a></p>
<p>11、《资治通鉴》载孙策相关附注释及翻译<br><a href="https://55555555555w.lofter.com/post/1e6cbbf7_ef1908cb">https://555w.lof</a></p>
<p>12、三国研究基本书目建议<br><a href="https://share.api.weibo.cn/share/283448893.html?weibo_id=3565170607883883">https://share.com</a></p>
<p>13、《中国军事通史》孙策相关<br><a href="https://share.api.weibo.cn/share/283449029.html?weibo_id=4534526448245211">https://share.api.com</a></p>
<p>14、孙策墓相关资料<br><a href="https://share.api.weibo.cn/share/283449301.html?weibo_id=4716902793088403">https://weibo.com</a></p>
<p>15、《魏晋南北朝文学史研究入门》<br><a href="https://share.api.weibo.cn/share/283449531.html?weibo_id=4673801318826236">https://share.cn</a></p>
<p>16、志向高远的少年，所有大叔都会帮他——谈孙策立业<br><a href="https://mp.weixin.qq.com/s/mi_Uo3VTFmtQGjRMf0QlUg">https://www.weixin.com</a></p>
<p>17、“小霸王”孙策又美又飒，可惜过早地结束了辉煌而短暂的一生<br><a href="https://baijiahao.baidu.com/s?id=1692233298382155742&wfr=spider&for=pc&searchword=%E5%AD%99%E7%AD%96%E5%86%99%E5%AD%97%E6%BC%82%E4%BA%AE%E5%90%97">https://baijiahao.baidu.com</a></p>
<p>18、政治遗嘱与继承者们：孙策身后的江东<br><a href="https://mp.weixin.qq.com/s?__biz=MzAxNzg4MDMzMg==&mid=2247484236&idx=1&sn=f6c24550a5fe284c3ededfbbbbc3e07d&chksm=9bdf872faca80e3927c3c65f4a3ead96fe949661bce415047f77d740befe71de26aa2c8e07e4#rd">https://mp.weixin.com</a></p>
<p>19、总有刁民想害朕！——谈孙策用人<br><a href="https://mp.weixin.qq.com/s?__biz=MzAxNzg4MDMzMg==&mid=2247484222&idx=1&sn=2c03fb9a43f994b00b0302f3225e5abc&chksm=9bdf875daca80e4ba550f0a7ade17f3757cc18e13b95c6d611a55ecdddd402425d45a896a8b2&scene=21#wechat_redirect">https://mp.weixin.qq.com</a></p>
]]></content>
      <categories>
        <category>史向</category>
      </categories>
      <tags>
        <tag>史向</tag>
      </tags>
  </entry>
</search>
